(window.webpackJsonp=window.webpackJsonp||[]).push([[123],{552:function(t,s,a){"use strict";a.r(s);var e=a(16),v=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h1",{attrs:{id:"git-快速入门"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-快速入门"}},[t._v("#")]),t._v(" Git 快速入门")]),t._v(" "),a("h2",{attrs:{id:"git-简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-简介"}},[t._v("#")]),t._v(" Git 简介")]),t._v(" "),a("p",[a("a",{attrs:{href:"https://baike.baidu.com/item/GIT/12647237?fr=aladdin",target:"_blank",rel:"noopener noreferrer"}},[t._v("Git"),a("OutboundLink")],1),t._v("是"),a("strong",[t._v("分布式版本控制系统")])]),t._v(" "),a("p",[t._v("简单来说 Git 就是一个工具他可以帮助你克隆远程仓库代码，创建不同分支修改完再合并，这样不影响主线程每个版本之间是独立的。")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/axcmsm/tmp/raw/master/20210816154230.png",alt:""}})]),t._v(" "),a("p",[t._v("Git 工作流程：")]),t._v(" "),a("hr"),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/axcmsm/tmp/raw/master/20210816154452.png",alt:""}})]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("命令如下：")]),t._v(" "),a("ol",[a("li",[t._v("clone（克隆）：从远程仓库克隆代码")]),t._v(" "),a("li",[t._v("checkout（检出）：从本地仓库中检出一个仓库分支然后进行修订")]),t._v(" "),a("li",[t._v("add（添加）: 在提交前先将代码提交到暂存区")]),t._v(" "),a("li",[t._v("commit（提交）: 提交到本地仓库。本地仓库中保存修改的各个历史版本")]),t._v(" "),a("li",[t._v("fetch (抓取) ： 从远程库，抓取到本地仓库，不进行任何的合并动作，一般操作比较少。")]),t._v(" "),a("li",[t._v("pull (拉取) ： 从远程库拉到本地库，自动进行合并(merge)，然后放到到工作区，相当于 fetch+merge")]),t._v(" "),a("li",[t._v("push（推送） : 修改完成后，需要和团队成员共享代码时，将代码推送到远程仓库")])]),t._v(" "),a("h2",{attrs:{id:"git-安装"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git-安装"}},[t._v("#")]),t._v(" Git 安装")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("下载地址：https://git-scm.com/download")]),t._v(" "),a("p",[t._v("安装完后：右键查看到")]),t._v(" "),a("p",[a("img",{staticStyle:{zoom:"50%"},attrs:{src:"https://gitee.com/axcmsm/tmp/raw/master/20210816155030.png",alt:""}}),t._v(" 备注：Git GUI：Git 提供的图形界面工具 Git Bash：Git 提供的命令行工具")])]),t._v(" "),a("li",[a("p",[t._v("基本配置")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("打开 Git Bash")])]),t._v(" "),a("li",[a("p",[t._v("设置用户信息")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("git config --global user.name “ax”\ngit config --global user.email “24614721@xx.com”\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])])])])]),t._v(" "),a("ol",{attrs:{start:"3"}},[a("li",[a("p",[a("strong",[t._v("为常用指令配置别名（可选）")])]),t._v(" "),a("p",[t._v("有些常用的指令参数非常多，每次都要输入好多参数，我们可以使用别名")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("打开用户目录，创建"),a("code",[t._v(".bashrc")]),t._v("文件")]),t._v(" "),a("p",[t._v("如果不支持就打开 gitBash,执行 touch ~/.bashrc")]),t._v(" "),a("p",[a("img",{attrs:{src:"C:%5CUsers%5C123%5CAppData%5CRoaming%5CTypora%5Ctypora-user-images%5Cimage-20210816155644103.png",alt:"image-20210816155644103"}})])]),t._v(" "),a("li",[a("p",[t._v("在 .bashrc 文件中输入如下内容：")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#用于输出git提交日志")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("alias")]),t._v(" git-log"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'git log --pretty=oneline --all --graph --abbrev-commit'")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#用于输出当前目录所有文件及基本信息")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("alias")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[t._v("ll")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'ls -al'")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("然后刷新这个配置文件 source ~/.bashrc")])])])]),t._v(" "),a("li",[a("p",[t._v("如果出现乱码")]),t._v(" "),a("p",[t._v("执行：")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" config --global core.quotepath "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("false")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("在${git_home}/etc/bash.bashrc 添加：")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("LANG")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zh_CN.UTF-8"')]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v("export")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[a("span",{pre:!0,attrs:{class:"token environment constant"}},[t._v("LC_ALL")])]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"zh_CN.UTF-8"')]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])])]),t._v(" "),a("ol",{attrs:{start:"5"}},[a("li",[a("p",[t._v("获取本地仓库")]),t._v(" "),a("ol",[a("li",[t._v("创建一个空目录，进入空目录 （这个目录就是你的本地仓库了）")]),t._v(" "),a("li",[t._v("在这个目录中打开 git bash 窗口")]),t._v(" "),a("li",[t._v("执行 git init 初始化仓库")]),t._v(" "),a("li",[t._v("创建成功后可在文件夹下看到隐藏的.git 目录。")])])])]),t._v(" "),a("h2",{attrs:{id:"本地仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#本地仓库"}},[t._v("#")]),t._v(" 本地仓库")]),t._v(" "),a("p",[t._v("本地仓库中有三个区域，分别是工作区，暂存区、和仓库")]),t._v(" "),a("p",[t._v("工作区是用来改东西的，改完后可提交到暂存区最后再提交到本地仓库")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/axcmsm/tmp/raw/master/20210816160619.png",alt:""}})]),t._v(" "),a("h3",{attrs:{id:"添加本地仓库命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#添加本地仓库命令"}},[t._v("#")]),t._v(" 添加本地仓库命令：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("git add (工作区 --\x3e 暂存区)")]),t._v(" "),a("p",[t._v("命令形式:：git add 单个文件名|通配符")]),t._v(" "),a("p",[t._v("例如:")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("add")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[t._v(".")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 提交所以修改文件")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("git commit (暂存区 --\x3e 本地仓库)")]),t._v(" "),a("p",[t._v("命令形式：git commit -m '注释内容'")]),t._v(" "),a("p",[t._v("作用：提交暂存区内容到本地仓库的当前分支")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("git")]),t._v(" commit -m "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v("'第一次提交'")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("git status 查看的修改的状态（暂存区、工作区）")])]),t._v(" "),a("li",[a("p",[t._v("git-log 查看提交记录：命令形式：git log [option]")]),t._v(" "),a("ul",[a("li",[t._v("options\n"),a("ul",[a("li",[t._v("all 显示所有分支")]),t._v(" "),a("li",[t._v("pretty=oneline 将提交信息显示为一行")]),t._v(" "),a("li",[t._v("abbrev-commit 使得输出的 commitId 更简短")]),t._v(" "),a("li",[t._v("graph 以图的形式显示")])])])])]),t._v(" "),a("li",[a("p",[t._v("版本回退")]),t._v(" "),a("ul",[a("li",[t._v("作用：版本切换")]),t._v(" "),a("li",[t._v("命令形式：git reset --hard commitID\n"),a("ul",[a("li",[t._v("commitID 可以使用 git-log 或 git log 指令查看")])])]),t._v(" "),a("li",[t._v("git reflflog 查看已删除记录")])])])]),t._v(" "),a("ol",{attrs:{start:"6"}},[a("li",[a("p",[t._v("添加文件至忽略列表")]),t._v(" "),a("p",[t._v("一般我们总会有些文件无需纳入 Git 的管理，也不希望它们总出现在未跟踪文件列表。 通常都是些自动")]),t._v(" "),a("p",[t._v("生成的文件，比如日志文件，或者编译过程中创建的临时文件等。 在这种情况下，我们可以在工作目录")]),t._v(" "),a("p",[t._v("中创建一个名为 .gitignore 的文件（文件名称固定），列出要忽略的文件模式。")]),t._v(" "),a("p",[t._v("示例：")]),t._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[t._v("# no .a files\n*.a\n#  but do track lib.a, even though you're ignoring .a files above\n# only ignore the TODO file in the current directory, not subdir/TODO\n/TODO\n# ignore all files in the build/ directory\nbuild/\n# ignore doc/notes.txt, but not doc/server/arch.txt\ndoc/*.txt\n# ignore all .pdf files in the doc/ directory\ndoc/**/*.pdf\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br")])])])]),t._v(" "),a("h3",{attrs:{id:"分支"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#分支"}},[t._v("#")]),t._v(" 分支")]),t._v(" "),a("hr"),t._v(" "),a("p",[t._v("几乎所有的版本控制系统都以某种形式支持分支。 使用分支意味着你可以把你的工作从开发主线上分离")]),t._v(" "),a("p",[t._v("开来进行重大的 Bug 修改、开发新的功能，以免影响开发主线。")]),t._v(" "),a("p",[t._v("分支命令：")]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("查看本地分支")])]),t._v(" "),a("ul",[a("li",[t._v("命令：git branch")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("创建本地分支")])]),t._v(" "),a("ul",[a("li",[t._v("命令：git branch 分支名")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("切换分支")]),t._v("(checkout)")]),t._v(" "),a("ul",[a("li",[t._v("命令：git checkout 分支名")])]),t._v(" "),a("p",[t._v("我们还可以直接切换到一个不存在的分支（创建并切换）")]),t._v(" "),a("ul",[a("li",[t._v("命令：git checkout -b 分支名")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("合并分支")]),t._v("(merge)")]),t._v(" "),a("p",[t._v("一个分支上的提交可以合并到另一个分支")]),t._v(" "),a("p",[t._v("命令：git merge 分支名称")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("删除分支")])]),t._v(" "),a("p",[a("strong",[t._v("不能删除当前分支，只能删除其他分支")])]),t._v(" "),a("p",[t._v("git branch -d b1 删除分支时，需要做各种检查")]),t._v(" "),a("p",[t._v("git branch -D b1 不做任何检查，强制删除")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("解决冲突")])]),t._v(" "),a("p",[t._v("如果俩个分支存在同时修改同一个文件同一行，需要手动解决冲突")]),t._v(" "),a("ol",[a("li",[t._v("找出文章冲突的地方")]),t._v(" "),a("li",[t._v("将其解决，解决完加入暂存区 add")]),t._v(" "),a("li",[t._v("提交到仓库 commit")])])])]),t._v(" "),a("ol",{attrs:{start:"7"}},[a("li",[a("p",[a("strong",[t._v("开发中分支使用原则与流程")])]),t._v(" "),a("p",[t._v("使用分支意味着你可以把你的工作从开发主线上分离开来进行重大的 Bug 修改、开发新的功能，以免影响开发主线")]),t._v(" "),a("p",[t._v("流程如下：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("master （生产） 分支")]),t._v(" "),a("p",[t._v("线上分支，主分支，中小规模项目作为线上运行的应用对应的分支；")])]),t._v(" "),a("li",[a("p",[t._v("develop（开发）分支")]),t._v(" "),a("p",[t._v("主要开发分支开发完合并到 master 分支上")])]),t._v(" "),a("li",[a("p",[t._v("feature/xxxx 分支")]),t._v(" "),a("p",[t._v("从 develop 创建的分支，合并到 develop 分支中")])]),t._v(" "),a("li",[a("p",[t._v("hotfifix/xxxx 分支")]),t._v(" "),a("p",[t._v("从 master 派生的分支，一般作为线上 bug 修复使用，修复完成后需要合并到 master、test、develop 分支。")])]),t._v(" "),a("li",[a("p",[t._v("还有一些其他分支，例如 test 分支（用于代码测试）、pre 分支（预上线分支）等等。")])])])])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"git远程仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#git远程仓库"}},[t._v("#")]),t._v(" "),a("strong",[t._v("Git")]),t._v("远程仓库")]),t._v(" "),a("p",[a("strong",[t._v("常用的托管服务")]),t._v("[远程仓库]")]),t._v(" "),a("p",[t._v("我们可以借助互联网上提供的一些代码托管服务来实现，其中比较常用的有"),a("a",{attrs:{href:"https://github.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitHub"),a("OutboundLink")],1),t._v("、"),a("a",{attrs:{href:"https://gitee.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("码云"),a("OutboundLink")],1),t._v("、"),a("a",{attrs:{href:"https://about.gitlab.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("GitLab"),a("OutboundLink")],1),t._v("等")]),t._v(" "),a("p",[t._v("GitLab：开源项目，一般用于在企业、学校等内部网络搭建 git 私服。")]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"创建远程仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#创建远程仓库"}},[t._v("#")]),t._v(" 创建远程仓库")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("注册码云或者 github")])]),t._v(" "),a("li",[a("p",[t._v("新建仓库")])]),t._v(" "),a("li",[a("p",[t._v("配置 ssh 公钥")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("生成 SSH 公钥")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("ssh-keygen -t rsa\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 不断回车即可")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("#如果公钥已经存在，则自动覆盖")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("设置账户共公钥")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("# 获取公钥")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("cat")]),t._v(" ~/.ssh/id_rsa.pub\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br")])]),a("p",[t._v("然后把公钥贴在 gitee 或者 github 的公钥中")])]),t._v(" "),a("li",[a("p",[t._v("验证是否配置成功")]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("ssh")]),t._v(" -T git@gitee.com\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])])])])])]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"操作远程仓库"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#操作远程仓库"}},[t._v("#")]),t._v(" 操作远程仓库")]),t._v(" "),a("hr"),t._v(" "),a("p",[a("strong",[t._v("此操作是先初始化本地库，然后与已创建的远程库进行对接")]),t._v("。")]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("添加远程仓库")])]),t._v(" "),a("ul",[a("li",[t._v("命令： git remote add <远端名称> <仓库路径>\n"),a("ul",[a("li",[t._v("远端名称，默认是 origin，取决于远端服务器设置")]),t._v(" "),a("li",[t._v("仓库路径，从远端服务器获取此 URl")]),t._v(" "),a("li",[t._v("例如：git remote add origin git@gitee.com:czbk_zhang_meng/git_test.git")])])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("查看远程仓库")])]),t._v(" "),a("ul",[a("li",[t._v("命令：git remote")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("推送到远程仓库")])]),t._v(" "),a("ul",[a("li",[t._v("命令：git push [-f][--set-upstream] [远端名称 [本地分支名][:远端分支名] ]\n"),a("ul",[a("li",[t._v("如果远程分支名和本地分支名称相同，则可以只写本地分支")]),t._v(" "),a("li",[t._v("git push origin master")])])]),t._v(" "),a("li",[t._v("-f 表示强制覆盖")]),t._v(" "),a("li",[t._v("--set-upstream 推送到远端的同时并且建立起和远端分支的关联关系。\n"),a("ul",[a("li",[t._v("git push --set-upstream origin master")])])]),t._v(" "),a("li",[t._v("如果"),a("strong",[t._v("当前分支已经和远端分支关联")]),t._v("，则可以省略分支名和远端名。\n"),a("ul",[a("li",[t._v("git push 将 master 分支推送到已关联的远端分支。")])])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("本地分支与远程分支的关联关系")])]),t._v(" "),a("ul",[a("li",[t._v("查看关联关系我们可以使用 git branch -vv 命令")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("从远程仓库克隆")])]),t._v(" "),a("ul",[a("li",[t._v("如果已经有一个远端仓库，我们可以直接 clone 到本地")]),t._v(" "),a("li",[t._v("命令: git clone <仓库路径> [本地目录]\n"),a("ul",[a("li",[t._v("本地目录可以省略，会自动生成一个目录")])])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("从远程仓库中抓取和拉取")])]),t._v(" "),a("p",[t._v("远程分支和本地的分支一样，我们可以进行 merge 操作，只是需要先把远端仓库里的更新都下载到本地，再进行操作")]),t._v(" "),a("ul",[a("li",[t._v("抓取 命令：git fetch [remote name][branch name]\n"),a("ul",[a("li",[a("strong",[t._v("抓取指令就是将仓库里的更新都抓取到本地，不会进行合并")])]),t._v(" "),a("li",[t._v("如果不指定远端名称和分支名，则抓取所有分支")])])]),t._v(" "),a("li",[t._v("拉取 命令：git pull [remote name][branch name]\n"),a("ul",[a("li",[a("strong",[t._v("拉取指令就是将远端仓库的修改拉到本地并自动进行合并，等同于")]),t._v("fetch+merge (抓取 加 合并分支)")]),t._v(" "),a("li",[t._v("如果不指定远端名称和分支名，则抓取所有并更新当前分支。")])])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("解决合并冲突")])]),t._v(" "),a("p",[t._v("方法跟上面一样,添加合并分支冲突一样")])])]),t._v(" "),a("hr"),t._v(" "),a("h2",{attrs:{id:"在-idea-中使用-git"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#在-idea-中使用-git"}},[t._v("#")]),t._v(" 在 Idea 中使用 Git")]),t._v(" "),a("ol",[a("li",[a("p",[a("strong",[t._v("在 idea 中配置 git")])]),t._v(" "),a("ul",[a("li",[a("p",[t._v("找到配置 git 路径，选择 File→Settings 打开设置窗口，找到 Version Control 下的 git 选项")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/axcmsm/tmp/raw/master/20210816165912.png",alt:""}})])]),t._v(" "),a("li",[a("p",[t._v("点击 Test 按钮,现在执行成功，配置完成")]),t._v(" "),a("img",{staticStyle:{zoom:"70%"},attrs:{src:"https://gitee.com/axcmsm/tmp/raw/master/20210816165936.png",alt:""}})])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("在 Idea 中操作 Git")])]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("新建远程仓库")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("初始化本地仓库")])]),t._v(" "),a("img",{staticStyle:{zoom:"60%"},attrs:{src:"https://gitee.com/axcmsm/tmp/raw/master/20210816170514.png"}}),t._v(" "),a("p",[t._v("然后选择本地创建的仓库即可")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("设置远程仓库")])]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://gitee.com/axcmsm/tmp/raw/master/20210816170759.png"}})]),t._v(" "),a("li",[a("p",[a("strong",[t._v("提交本地仓库")])]),t._v(" "),a("img",{staticStyle:{zoom:"80%"},attrs:{src:"https://gitee.com/axcmsm/tmp/raw/master/20210816170848.png"}})]),t._v(" "),a("li",[a("p",[a("strong",[t._v("推送到远程仓库")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/axcmsm/tmp/raw/master/20210816171055.png",alt:""}})])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("克隆仓库")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/axcmsm/tmp/raw/master/20210816171122.png",alt:""}})])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("创建分支")])]),t._v(" "),a("p",[t._v("右下角或者点击创建新分支的位置，右键")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/axcmsm/tmp/raw/master/20210816171353.png",alt:""}})])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("切换分支及其他分支相关操作")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/axcmsm/tmp/raw/master/20210816171422.png",alt:""}})])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("解决冲突")])]),t._v(" "),a("p",[t._v("当发生执行 merge 或 pull 操作冲突时")]),t._v(" "),a("p",[t._v("到代码修改完再提交")])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("IDEA 常用 GIT 操作入口")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/axcmsm/tmp/raw/master/20210816171741.png",alt:""}})]),t._v(" "),a("p",[t._v("在 vcs 中也有相应操作功能")])])]),t._v(" "),a("hr"),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("提示")])]),t._v(" "),a("p",[t._v("切换分支线提交本地，提交过的代码可找回")]),t._v(" "),a("p",[t._v("以及 idea 集成 gitBash 作为 terminal")])]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/axcmsm/tmp/raw/master/20210816172505.png",alt:""}})]),t._v(" "),a("hr"),t._v(" "),a("h3",{attrs:{id:"浏览"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#浏览"}},[t._v("#")]),t._v(" 浏览：")]),t._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/axcmsm/tmp/raw/master/20210816231355.png",alt:""}})]),t._v(" "),a("hr")])}),[],!1,null,null,null);s.default=v.exports}}]);
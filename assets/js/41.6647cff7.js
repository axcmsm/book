(window.webpackJsonp=window.webpackJsonp||[]).push([[41],{475:function(s,t,a){"use strict";a.r(t);var n=a(16),e=Object(n.a)({},(function(){var s=this,t=s.$createElement,a=s._self._c||t;return a("ContentSlotsDistributor",{attrs:{"slot-key":s.$parent.slotKey}},[a("h2",{attrs:{id:"spark-概述"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spark-概述"}},[s._v("#")]),s._v(" "),a("strong",[s._v("Spark")]),s._v(" "),a("strong",[s._v("概述")])]),s._v(" "),a("p",[s._v("基于内存的快速,通用可扩展的分析计算引擎，基于scala开发。")]),s._v(" "),a("p",[a("strong",[s._v("核心模块")]),s._v("：")]),s._v(" "),a("ul",[a("li",[s._v("spark core ： 是基础和最"),a("strong",[s._v("核心")]),s._v("功能 (其他都是此基础上开发)")]),s._v(" "),a("li",[s._v("spark sql  ： 用sql"),a("strong",[s._v("操作")]),s._v("查询数据")]),s._v(" "),a("li",[s._v("spark streaming ： "),a("strong",[s._v("流式")]),s._v("处理模块")]),s._v(" "),a("li",[s._v("spark MLib ： "),a("strong",[s._v("机器学习")]),s._v("模块(难度高 需要数学基础)")]),s._v(" "),a("li",[s._v("spark GraphX： "),a("strong",[s._v("图形挖掘")]),s._v("模块(难度高 需要数学基础)")])]),s._v(" "),a("p",[a("strong",[s._v("spark和hadoop的对比")]),s._v("：")]),s._v(" "),a("blockquote",[a("p",[s._v("Spark 和Hadoop 的根本差异是多个作业之间的数据通信问题 : Spark 多个作业之间数据")]),s._v(" "),a("p",[s._v("通信是基于内存，而 Hadoop 是基于磁盘。")]),s._v(" "),a("p",[s._v("spark只有在"),a("strong",[s._v("shuffle")]),s._v("时才会"),a("strong",[s._v("落盘")]),s._v("。")])]),s._v(" "),a("h2",{attrs:{id:"快速上手"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#快速上手"}},[s._v("#")]),s._v(" "),a("strong",[s._v("快速上手")])]),s._v(" "),a("ol",[a("li",[a("p",[a("strong",[s._v("创建")]),s._v(" "),a("strong",[s._v("Maven")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("增加")]),s._v(" "),a("strong",[s._v("Scala")]),s._v(" "),a("strong",[s._v("插件")]),s._v(" （注意选择对应的版本）")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("增加依赖关系")])])])]),s._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[s._v(" "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("org.apache.spark"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("spark-core_2.12"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("<")]),s._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("3.0.0"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("</")]),s._v("dependencies")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(">")])]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[a("code",[s._v("log4j.properties")])]),s._v(" "),a("div",{staticClass:"language-properties line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-properties"}},[a("code",[a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("log4j.rootCategory")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("ERROR, console")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("log4j.appender.console")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("org.apache.log4j.ConsoleAppender")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("log4j.appender.console.target")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("System.err")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("log4j.appender.console.layout")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("org.apache.log4j.PatternLayout")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("log4j.appender.console.layout.ConversionPattern")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("%d{yy/MM/dd ")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("HH")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(":")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("mm:ss} %p %c{1}: %m%n")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Set the default spark-shell log level to ERROR. When running the spark-shell,")]),s._v("\nthe\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# log level for this class is used to overwrite the root logger's log level, so")]),s._v("\nthat\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# the user can have different defaults for the shell and regular Spark apps.")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("log4j.logger.org.apache.spark.repl.Main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("ERROR")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# Settings to quiet third party logs that are too verbose")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("log4j.logger.org.spark_project.jetty")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("ERROR")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("log4j.logger.org.spark_project.jetty.util.component.AbstractLifeCycle")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("ERROR")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("log4j.logger.org.apache.spark.repl.SparkIMain$exprTyper")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("ERROR")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("log4j.logger.org.apache.spark.repl.SparkILoop$SparkILoopInterpreter")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("ERROR")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("log4j.logger.org.apache.parquet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("ERROR")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("log4j.logger.parquet")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("ERROR")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# SPARK-9183: Settings to avoid annoying messages when looking up nonexistent")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("UDFs")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("in SparkSQL with Hive support")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("log4j.logger.org.apache.hadoop.hive.metastore.RetryingHMSHandler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("FATAL")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token attr-name"}},[s._v("log4j.logger.org.apache.hadoop.hive.ql.exec.FunctionRegistry")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token attr-value"}},[s._v("ERROR")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br")])]),a("ol",{attrs:{start:"4"}},[a("li",[a("p",[a("strong",[s._v("WordCount")]),s._v("测试")]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建 Spark 运行配置对象")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" sparkConf "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" SparkConf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("setMaster"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"local[*]"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("setAppName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"WordCount"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 创建 Spark 上下文环境对象（连接对象）")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" sc "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" SparkContext "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" SparkContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sparkConf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 读取文件数据")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" fileRDD"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RDD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" sc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("textFile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"input/word.txt"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将文件中的数据进行分词")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" wordRDD"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RDD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" fileRDD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("flatMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v(" _"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("split"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 转换数据结构 word => (word, 1)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" word2OneRDD"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RDD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" wordRDD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("_"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将转换结构后的数据按照相同的单词进行分组聚合")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" word2CountRDD"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RDD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" word2OneRDD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("reduceByKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("_"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("_"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 将数据聚合结果采集到内存中")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" word2Count"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" word2CountRDD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("collect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 打印结果")]),s._v("\nword2Count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("foreach"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("println"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//关闭 Spark 连接")]),s._v("\nsc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("stop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])])])]),s._v(" "),a("h2",{attrs:{id:"运行环境-部署"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运行环境-部署"}},[s._v("#")]),s._v(" "),a("strong",[s._v("运行环境")]),s._v(" 部署")]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("local模块")]),s._v("：测试    1节点")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(". 上传解压到指定目录\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(". bin/spark-shell "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#直接启动即可")]),s._v("\nUI 访问端口 http://虚拟机地址:4040\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("Standalone")]),s._v(" "),a("strong",[s._v("模式")]),s._v(" :  "),a("strong",[s._v("独立")]),s._v("部署  主从架构模式   3节点")])])]),s._v(" "),a("blockquote",[a("p",[s._v("拥有一个master和三个workey，自己调度资源自己执行程序")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(". 解压文件到指定目录\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(". 修改节点配置文件\n\t"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("cd")]),s._v(" conf\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" slaves.template slaves  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#将模板文件修改成自己的")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#添加修改主机节点")]),s._v("\n\thadoop111\n\thadoop112\n\thadoop113\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(". 修改执行配置文件\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" spark-env.sh.template spark-env.sh "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#将模板文件改名")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#添加 JAVA_HOME 环境变量和集群对应的 master 节点")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("JAVA_HOME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/opt/module/jdk1.8.0_144\n\t"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("SPARK_MASTER_HOST")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("hadoop111\n\t"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("SPARK_MASTER_PORT")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7077")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#内部通信端口类似8020")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(". 分发修改好的压缩目录\t\n\txsync spark-standalone\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(". 启动or关闭\n\tsbin/start-all.sh "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#启动")]),s._v("\nUI访问端口：Web UI 界面: http://hadoop111:8080\t\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(". 配置历史服务\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" spark-defaults.conf.template spark-defaults.conf \n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#配置日志存储路径")]),s._v("\n\tspark.eventLog.enabled "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#开启")]),s._v("\n\tspark.eventLog.dir hdfs://hadoop111:8020/directory "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#此目录需要在hdfs上提前创建")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#修改 spark-env.sh 文件, 添加日志配置")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("SPARK_HISTORY_OPTS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\n\t-Dspark.history.ui.port=18080 #日志的WEB UI访问端口\n\t-Dspark.history.fs.logDirectory=hdfs://hadoop111:8020/directory #存储路径\n\t-Dspark.history.retainedApplications=30"')]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#保存的历史个数")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#分发配置文件")]),s._v("\n\txsync conf\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#重启集群和历史服务")]),s._v("\n\tsbin/start-all.sh\n\tsbin/start-history-server.sh\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br")])]),a("ul",[a("li",[a("p",[a("strong",[s._v("配置高可用（HA）")]),s._v(":防止单点故障  一般采用zk设置")]),s._v(" "),a("blockquote",[a("p",[s._v("2台配置master 3台zk 3台worker")])]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v('1. 停止集群\n2. 启动zk集群\n3. 修改 spark-env.sh 文件\n\t#注释\n\t#SPARK_MASTER_HOST=hadoop111\n\t#SPARK_MASTER_PORT=7077\n\t添加如下内容:\n\t#Master 监控页面默认访问端口为 8080，但是可能会和 Zookeeper 冲突，\n\t#所以改成 8989，也可以自定义，访问 UI 监控页面时请注意\n\tSPARK_MASTER_WEBUI_PORT=8989\n\texport SPARK_DAEMON_JAVA_OPTS="\n\t-Dspark.deploy.recoveryMode=ZOOKEEPER \n\t-Dspark.deploy.zookeeper.url=hadoop111,hadoop112,hadoop113\n\t-Dspark.deploy.zookeeper.dir=/spark"\n4. 分发配置文件\n\txsync conf/\n5. 启动集群\n\tsbin/start-all.sh\n6. 启动备用master (部署master的机器上)\n\tsbin/start-master.sh\n')])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("Yarn")]),s._v(" "),a("strong",[s._v("模式")]),s._v(" ：常用模式👩🏾   1节点")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(". 解压文件到指定目录\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(". 修改hadoop中的yarn-site.xml配置文件\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("--是否启动一个线程检查每个任务正使用的物理内存量，如果任务超出分配值，则直接将其杀掉，默认是 "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" --"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("property"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n \t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("yarn.nodemanager.pmem-check-enabled"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\t\t "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("false"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/value"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/property"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("!")]),s._v("--是否启动一个线程检查每个任务正使用的虚拟内存量，如果任务超出分配值，则直接将其杀掉，默认是 "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v(" --"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("property"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\t\t "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("yarn.nodemanager.vmem-check-enabled"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/name"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n \t\t\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("value"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("false"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/value"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("<")]),s._v("/property"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(".  修改 conf/spark-env.sh 添加 JAVA_HOME 和 YARN_CONF_DIR 配置\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" spark-env.sh.template spark-env.sh "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#改名")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("JAVA_HOME")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/opt/module/jdk1.8.0_144\n\t"),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("YARN_CONF_DIR")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("/opt/module/hadoop/etc/hadoop\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(". 启动 HDFS 以及 YARN 集群\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#看 http://hadoop112:8088 页面，点击 History，查看历史页面")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(". 配置历史服务器\n\t"),a("span",{pre:!0,attrs:{class:"token function"}},[s._v("mv")]),s._v(" spark-defaults.conf.template spark-defaults.conf "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#改名")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#配置日志存储路径")]),s._v("\n\tspark.eventLog.enabled "),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),s._v("\n\tspark.eventLog.dir hdfs://linux1:8020/directory "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#目录需存在")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#修改 spark-env.sh 文件,日志配置")]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v("export")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token assign-left variable"}},[s._v("SPARK_HISTORY_OPTS")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"\n\t-Dspark.history.ui.port=18080 \n\t-Dspark.history.fs.logDirectory=hdfs://hadoop111:8020/directory \n\t-Dspark.history.retainedApplications=30"')]),s._v("\n\t"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#修改 spark-defaults.conf")]),s._v("\n\tspark.yarn.historyServer.address"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("hadoop111:18080\n\tspark.history.ui.port"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("18080")]),s._v("\t\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(". 启动历史服务\n\tsbin/start-history-server.sh\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("K8S & Mesos")]),s._v(" "),a("strong",[s._v("模式")])]),s._v(" "),a("blockquote",[a("p",[s._v("Mesos 是 Apache 下的开源分布式资源管理框架,国外很多人在使用。")]),s._v(" "),a("p",[s._v("K8S容器管理工具：部署教程："),a("a",{attrs:{href:"https://spark.apache.org/docs/latest/running-on-kubernetes.html",target:"_blank",rel:"noopener noreferrer"}},[s._v("https://spark.apache.org/docs/latest/running-on-kubernetes.html"),a("OutboundLink")],1)])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("Windows")]),s._v(" "),a("strong",[s._v("模式")]),s._v("：测试模式 可以不用启动虚拟机")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(". 解压到指定文件 （无中文无空格）\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(". 启动本地环境\n\t执行解压缩文件路径下 bin 目录中的 spark-shell.cmd 文件，启动 Spark 本地环境\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])])]),s._v(" "),a("p",[a("strong",[s._v("程序的提交")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("bin/spark-submit \\\n--class org.apache.spark.examples.SparkPi \\\n--master yarn \\\n--deploy-mode cluster \\\n./examples/jars/spark-examples_2.12-3.0.0.jar \\\n10\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("p",[s._v("解释")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" --class 表示要执行程序的主类，此处可以更换为咱们自己写的应用程序\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" --master local"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" 部署模式，默认为本地模式，数字表示分配的虚拟 CPU 核数量\n   --master spark://linux1:7077 独立部署模式，连接到 Spark 集群\n   --master Yarn\t\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" spark-examples_2.12-3.0.0.jar 运行的应用类所在的 jar 包，实际使用时，可以设定为咱\n们自己打的 jar 包\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" 数字 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v(" 表示程序的入口参数，用于设定当前应用的任务数量\n其他\n--num-executors 配置 Executor 的数量\n--driver-memory 配置 Driver 内存（影响不大）\n--executor-memory 1G 指定每个 executor 可用内存为 1G\n--total-executor-cores "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" 指定所有executor使用的cpu核数为 "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(" 个\n--executor-cores 指定每个executor使用的cpu核数\napplication-arguments 传给 main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("方法的参数\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br")])]),a("p",[a("strong",[s._v("补充")]),s._v("：生产环境 Spark submit 脚本配置")]),s._v(" "),a("div",{staticClass:"language-bash line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-bash"}},[a("code",[s._v("bin/spark-submit "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--class com.atguigu.spark.WordCount "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--master yarn"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--deploy-mode cluster"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--num-executors "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("80")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--driver-memory 6g "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--executor-memory 6g "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--executor-cores "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--queue root.default "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--conf spark.yarn.executor.memoryOverhead"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2048")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n--conf spark.core.connection.ack.wait.timeout"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("300")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("\\")]),s._v("\n/usr/local/spark/spark.jar\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("p",[s._v("参数配置参考值：")]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[s._v("➢ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("num"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("executors："),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("50")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("100")]),s._v("\n➢ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("driver"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("memory："),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("G"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v("G\n➢ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("executor"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("memory："),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v("G"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("~")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("10")]),s._v("G\n➢ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("executor"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("-")]),s._v("cores："),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(" ➢ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("--")]),s._v("master：实际生产环境一定使用\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br")])]),a("blockquote",[a("p",[s._v("总结端口号：")]),s._v(" "),a("p",[s._v("➢ Spark 查看当前 Spark-shell 运行任务情况端口号：4040（计算）")]),s._v(" "),a("p",[s._v("➢ Spark Master 内部通信服务端口号：7077")]),s._v(" "),a("p",[s._v("➢ Standalone 模式下，Spark Master Web 端口号：8080（资源）")]),s._v(" "),a("p",[s._v("➢ Spark 历史服务器端口号：18080")]),s._v(" "),a("p",[s._v("➢ Hadoop YARN 任务运行情况查看端口号：8088")])]),s._v(" "),a("h2",{attrs:{id:"运行架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#运行架构"}},[s._v("#")]),s._v(" "),a("strong",[s._v("运行架构")])]),s._v(" "),a("p",[s._v("主从架构")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/axcmsm/tmp/raw/master/bigdata/20211002162318.png",alt:""}})]),s._v(" "),a("p",[a("strong",[s._v("Dirver")]),s._v(": 调度节点")]),s._v(" "),a("ul",[a("li",[s._v("将用户程序转换成作业")]),s._v(" "),a("li",[s._v("在Executor之间调度任务task")]),s._v(" "),a("li",[s._v("跟踪执行情况")]),s._v(" "),a("li",[s._v("通过UI展示运行情况")])]),s._v(" "),a("p",[a("strong",[s._v("Executor")]),s._v("：计算节点")]),s._v(" "),a("ul",[a("li",[s._v("负责执行具体任务Task，并将其返回给Driver")]),s._v(" "),a("li",[s._v("为了提高性能也会对数据进行一些缓存RDD")])]),s._v(" "),a("p",[a("strong",[s._v("独立部署组件")]),s._v("：Master&Worker：跟资源相关 （相当于yarn的老大和小弟）")]),s._v(" "),a("p",[a("strong",[s._v("ApplicationMaster")]),s._v(": 提供：计算和资源交互")]),s._v(" "),a("h3",{attrs:{id:"核心概念"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#核心概念"}},[s._v("#")]),s._v(" 核心概念")]),s._v(" "),a("p",[a("strong",[s._v("Executor&Core")])]),s._v(" "),a("blockquote",[a("p",[s._v("Executor是运行在worker(工作节点)上的一个jvm进程。专门用于计算的节点，提交需要指定节点个数和计算对应的资源 （Executor的内存大小和CPU核(Core) 的数量")])]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[s._v("配置参数\n\t名称   \t\t\t\t说明\n--num-executors \t配置 Executor 的数量\n--executor-memory 配置每个 Executor 的内存大小\n--executor-cores 配置每个 Executor 的虚拟 CPU core 数量\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br")])]),a("p",[a("strong",[s._v("并行度")]),s._v(" Parallelism  :整个集群并行执行任务的数量。(占用的核core)")]),s._v(" "),a("p",[a("strong",[s._v("有向无环图")]),s._v(" DAG : 任务的调度，其内部是有向无环图")]),s._v(" "),a("p",[a("strong",[s._v("提交流程")]),s._v("：")]),s._v(" "),a("p",[s._v("这里主要yarn的提交流程")]),s._v(" "),a("p",[a("img",{attrs:{src:"https://gitee.com/axcmsm/tmp/raw/master/bigdata/20211002162838.png",alt:""}})]),s._v(" "),a("div",{staticClass:"language- line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-text"}},[a("code",[s._v("1. 任务提交\t\n2. Driver运行(申请支援) -> 向集群管理者 注册任务 -> 管理者 启动Executor后进行反向注册给(告诉)Driver\n3. 条件满足-> 执行Main函数 (执行计算代码)\n4. 懒执行->执行到action算子\n5. 触发job-> stage划分\n6. 创建TaskSet 任务 -> 发送给 已经启动的Executor 进行执行\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("blockquote",[a("p",[s._v("yarn部署方式分俩种: "),a("strong",[s._v("Client")]),s._v("(集群之外) 和"),a("strong",[s._v("Cluster")]),s._v("() ："),a("strong",[s._v("Driver")]),s._v("程序的运行节点不同")])]),s._v(" "),a("p",[a("strong",[s._v("Yarn Client")]),s._v(" "),a("strong",[s._v("模式")]),s._v("：在客户端执行，一般用于测试环境")]),s._v(" "),a("p",[a("strong",[s._v("Yarn Cluster")]),s._v(" "),a("strong",[s._v("模式")]),s._v(" ：启动在 Yarn 集群资源中执行，一般用于生产环境")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(". 在 YARN Cluster 模式下，任务提交后会和 ResourceManager 通讯申请启动\nApplicationMaster\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(". 随后 ResourceManager 分配 container，在合适的 NodeManager \n上启动 ApplicationMaster，此时的 ApplicationMaster 就是 Driver\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(". Driver 启动后向 ResourceManager 申请 Executor 内存，ResourceManager 接到\nApplicationMaster 的资源申请后会分配 container，然后在合适的 NodeManager 上启动\nExecutor 进程\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(". Executor 进程启动后会向 Driver 反向注册，Executor 全部注册完成后 Driver 开始执行\nmain 函数\n\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5")]),s._v(". 之后执行到 Action 算子时，触发一个 Job，并根据宽依赖开始划分 stage，每个 stage 生\n成对应的 TaskSet，之后将 task 分发到各个 Executor 上执行\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br")])]),a("h2",{attrs:{id:"核心编程⛳"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#核心编程⛳"}},[s._v("#")]),s._v(" "),a("strong",[s._v("核心编程")]),s._v("⛳")]),s._v(" "),a("p",[s._v("为了实现高并发和高吞吐,封装了三大数据结构：")]),s._v(" "),a("ul",[a("li",[s._v("RDD :弹性分布式数据集")]),s._v(" "),a("li",[s._v("累加器 ：分布式共享只写变量")]),s._v(" "),a("li",[s._v("广播变量 ：分布式共享只读变量")])]),s._v(" "),a("p",[a("strong",[s._v("RDD")]),s._v("：数据基本的"),a("strong",[s._v("处理模型")]),s._v(",最小的计算单元")]),s._v(" "),a("blockquote",[a("p",[s._v("会把RDD里面的内容(读取数据or逻辑切分 "),a("strong",[s._v("分区概念")]),s._v(")分解成一个一个task发送给Executor执行节点")]),s._v(" "),a("p",[s._v("实际上一个RDD里面的逻辑是很简单的,所以一个复杂的任务是多个RDD串联起来,然后再分解成task发送执行节点,进行并行处理。")]),s._v(" "),a("p",[s._v("是一个抽象，弹性、不可变、可分区、里面可并行计算的集合")]),s._v(" "),a("p",[a("strong",[s._v("弹性")]),s._v(":")]),s._v(" "),a("ul",[a("li",[s._v("内存：(内存磁盘自动切换)、")]),s._v(" "),a("li",[s._v("容错：(数据丢失可自动恢复)")]),s._v(" "),a("li",[s._v("计算：(计算出错可重试)")]),s._v(" "),a("li",[s._v("分片：(按需重新分片)")])]),s._v(" "),a("p",[a("strong",[s._v("抽象")]),s._v("：是一个抽象类,可按需子类添加扩展")]),s._v(" "),a("p",[a("strong",[s._v("数据集")]),s._v("：封装了计算逻辑、不保存数据")]),s._v(" "),a("p",[a("strong",[s._v("分布式")]),s._v("：数据存储集群不同节点上")]),s._v(" "),a("p",[a("strong",[s._v("不可变")]),s._v("：封装了计算逻辑，是不可改变的，需要改变只能产生新RDD")]),s._v(" "),a("p",[a("strong",[s._v("可分区、并行计算")])])]),s._v(" "),a("p",[s._v("扩展：")]),s._v(" "),a("p",[s._v("RDD处理的数据的方式类型于IO流,也有"),a("strong",[s._v("装饰者设计模式")])]),s._v(" "),a("p",[s._v("前面处理数据flatmap、reduceBykey...是构建处理数据的方式(功能扩展一步套一步)，不会真正处理数据，当执行到"),a("strong",[s._v("collect()时才真正开始处理数据")]),s._v(",但rdd不保存数据，io会临时保存一小部分数据。")]),s._v(" "),a("p",[a("strong",[s._v("核心属性")])]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("分区列表")]),s._v("：RDD数据结构中存在分区列表，用于执行任务时并行计算。")]),s._v(" "),a("li",[a("strong",[s._v("分区计算函数")]),s._v("：使用分区计算函数对每一个分区进行计算  (因为逻辑已经封装好了)")]),s._v(" "),a("li",[a("strong",[s._v("RDD之间的依赖关系")]),s._v("：rdd是计算模型的封装，有时也需要多个计算模型进行组合。")]),s._v(" "),a("li",[a("strong",[s._v("分区器")]),s._v(":（可选）当数据为 KV 类型数据时，可以通过设定分区器自定义数据的分区")]),s._v(" "),a("li",[a("strong",[s._v("首选位置")]),s._v(": 选择不同的节点位置("),a("strong",[s._v("数据的位置)"),a("strong",[s._v("进行计算")]),s._v("(因为移动数据不如移动计算)")])])]),s._v(" "),a("p",[a("strong",[s._v("执行原理")]),s._v(":")]),s._v(" "),a("p",[s._v("RDD是数据处理是核心模型。")]),s._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("#工作原理")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v(". 启动yarn集群环境 "),a("span",{pre:!0,attrs:{class:"token builtin class-name"}},[s._v(":")]),s._v(" RM -"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(">")]),s._v(" NM\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v(". spark通过申请资源调度节点Driver和计算节点Executor \n\tDirver 在RM中 而Executor在NM中\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),s._v(". 根据需求将计算逻辑根据分区划分成不同的任务  将任务放置在 任务池 当中 Driver调度 \n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),s._v(". 调度的节点将任务根据计算节点状态"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("首选位置"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("发送到对应的位置上进行计算\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("# RDD整个流程主要是讲逻辑进行封装,以及生成Task发送给Executor")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("h3",{attrs:{id:"rdd基础编程"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rdd基础编程"}},[s._v("#")]),s._v(" RDD基础编程")]),s._v(" "),a("p",[a("strong",[s._v("RDD")]),s._v(" "),a("strong",[s._v("创建")])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("内存创建 (常用) :``makeRDD(seq or list) 底层调用了`parallelize方法")]),s._v(" "),a("blockquote",[a("p",[s._v("默认是并行度分区数(当前环境运行最大核数),第二个参数指定")])])]),s._v(" "),a("li",[a("p",[s._v("外部存储文件创建 (常用)")]),s._v(" "),a("blockquote",[a("p",[a("code",[s._v('textFile("datas/1*.txt")按行读取')]),s._v(" 返回字符串  默认是俩个分区 math.min(核数,2)  第二个参数指定")]),s._v(" "),a("p",[a("code",[s._v("wholeTextFiles 按文件读取")]),s._v("：返回元组(路径,内容)")])])]),s._v(" "),a("li",[a("p",[s._v("其他的RDD创建")])]),s._v(" "),a("li",[a("p",[s._v("直接创建(new)")])])]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[s._v("    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//local[*] [*]表示利用当前电脑的CPU核数模拟线程执行 *表示当前线最大使用核数")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//local 不写默认是单核线程执行")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" sparkConf"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" SparkConf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("setMaster"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"local[*]"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("setAppName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"RDDtest"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" sc "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" SparkContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sparkConf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//从内存中创建 来自集合")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//val  seq=Seq[Int](1,3,4,2)")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//    val rdd = sc.makeRDD(seq)//底层调用parallelize")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" rdd "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" sc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("makeRDD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("\n      List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//分区数 默认是并行度分区数(当前环境运行最大核数)")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    rdd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("saveAsTextFile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"output"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//讲数据保存成分区文件")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//读取文件 项目根路径  目录 也可以使用通配符 还可以指定 hdfs路径")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//    sc.wholeTextFiles("wenj") 按行读取')]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v('//    val rdd = sc.textFile("datas/1*.txt")//当前环境根路径为基准。可以写绝对or相对')]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//hdfs://主机名:8020/文件目录路径")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//并行parallelize   需要跟核数")]),s._v("\n    rdd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("collect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("foreach"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("println"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    sc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("stop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br")])]),a("p",[a("strong",[s._v("分区的设置")])]),s._v(" "),a("ul",[a("li",[s._v("makeRDD：默认是读取配置的参数如果没有，默认是并行度分区数(当前环境运行最大核数),")]),s._v(" "),a("li",[s._v("textfile：默认是读取配置的参数如果没有,就是默认是俩个分区 math.min(核数,2)")])]),s._v(" "),a("blockquote",[a("p",[s._v("第二个参数指定分区数量")])]),s._v(" "),a("p",[a("strong",[s._v("分区的划分")]),s._v(":")]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[s._v("# 核心源码\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" positions"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("length"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Long")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" numSlices"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v(" until numSlices"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("iterator"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("map "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" i "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" start "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" numSlices"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("toInt\n "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" end "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("i "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("*")]),s._v(" length"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("/")]),s._v(" numSlices"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("toInt\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("start"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" end"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br")])]),a("p",[a("strong",[s._v("分区的内容划分")]),s._v("：")]),s._v(" "),a("p",[s._v("以行为单位,进行读取,读取时以偏移量为单位")]),s._v(" "),a("p",[s._v("数据分区根据偏移量范围进行计算，偏移量不会被重复读取。")]),s._v(" "),a("p",[a("strong",[s._v("分区考证")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[s._v("  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" main"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("args"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Unit")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//local[*] [*]表示利用当前电脑的CPU核数模拟线程执行 *表示当前线最大使用核数")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//local 不写默认是单核线程执行")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" sparkConf"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" SparkConf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("setMaster"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"local[*]"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("setAppName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"RDDtest"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" sc "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" SparkContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sparkConf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//14byte/2=7byte")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//能整除 俩分区")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/*\n      默认加回车换行\n      1234567@@ => 01245678         偏移量\n      89@@      => 910 11 12\n      0         => 13\n      预估范围 里的值\n      [0,7] => 0124567\n      [7,14] =>890\n       */")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" rdd "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" sc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("textFile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"datas/word.txt"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    rdd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("saveAsTextFile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"output"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    sc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("stop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("p",[a("strong",[s._v("算子")]),s._v("：RDD对象方法")]),s._v(" "),a("ul",[a("li",[s._v("转换算子：功能的补充和封装 例: flatmap.map")]),s._v(" "),a("li",[s._v("行动算子：触发作业执行和任务调度 例：collect")])]),s._v(" "),a("blockquote",[a("p",[s._v("把这些"),a("strong",[s._v("方法")]),s._v("将其称为RDD"),a("strong",[s._v("算子")]),s._v("  Operator(操作)")])]),s._v(" "),a("h3",{attrs:{id:"rdd转换算子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rdd转换算子"}},[s._v("#")]),s._v(" RDD转换算子")]),s._v(" "),a("p",[s._v("数据处理方式：整体上分为 Value 类型、双 Value 类型和 Key-Value类型")]),s._v(" "),a("p",[a("strong",[s._v("Value")]),s._v(" "),a("strong",[s._v("类型")])]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("map")]),s._v(" ：将处理的数据逐条进行映射转换  (分区内)")]),s._v(" "),a("blockquote",[a("p",[s._v("不同分区无序      同分区内执行有序(一个一个)")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("mapPartitions")]),s._v("： "),a("strong",[s._v("以分区为单位")]),s._v("发送到计算节点进行处理   (批处理操作)")]),s._v(" "),a("blockquote",[a("p",[s._v("把分区内的数据全部都拿到再进行操作, 里面是迭代器")]),s._v(" "),a("p",[s._v("会将整个分区的数据加载到内存中,进行引用，处理完也不会被释放，存在被引用")]),s._v(" "),a("p",[s._v("内存较小数据较大会导致内存溢出")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("mapPartitionsWithIndex")]),s._v(": 分区索引")]),s._v(" "),a("blockquote",[a("p",[s._v("可指定索引按需返回的分区, "),a("code",[s._v("Nil.iterator 空迭代器")])])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("flatMap")]),s._v(": 扁平映射 List => Int ..")]),s._v(" "),a("blockquote",[a("p",[s._v("返回一个可迭代的集合")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("glom")]),s._v(" ： 数据转换成内存数组  int => LIst")]),s._v(" "),a("blockquote",[a("p",[s._v("一个分区一个数组  分区不变转换的数据也不变")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("groupBy")]),s._v(": 分区个数不变，对指定规则进行分组，数据会被重新组合("),a("strong",[s._v("shuffle")]),s._v(")")]),s._v(" "),a("blockquote",[a("p",[s._v("对相同的key放置同一个组中")]),s._v(" "),a("p",[s._v("分区和分组没有必然关系，分区里面的数据会改变(打乱洗牌)")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("filter")]),s._v(" :过滤")]),s._v(" "),a("blockquote",[a("p",[s._v("过滤后分区不变，可能分区内的数据不均衡，会发生"),a("strong",[s._v("数据倾斜")])])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("sample")]),s._v(" :抽取数据")]),s._v(" "),a("blockquote",[a("p",[s._v("有重复的概念")]),s._v(" "),a("p",[s._v("基准值概念：概率")]),s._v(" "),a("p",[s._v("三个参数:")]),s._v(" "),a("ul",[a("li",[s._v("是否放回去")]),s._v(" "),a("li",[s._v("不放回表示：每条数据抽取的概率(分数) ，放回：表示每条数据抽取的可能次数（整数）")]),s._v(" "),a("li",[s._v("随机算法的种子(不传递表示当前系统时间,随机)")])])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("distinct")]),s._v("：去重")]),s._v(" "),a("blockquote",[a("p",[s._v("原理采用 map转换成(值,null)然后reduceBykey()根据值进行聚合然后map取出值。")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("coalesce")]),s._v(" ：缩减分区")]),s._v(" "),a("blockquote",[a("p",[s._v("过滤后的数据比较小,但是分区数不变,执行需要俩个Executor执行。")]),s._v(" "),a("p",[s._v("而coalesce可以把他们合并成一个分区再交给一个Executor执行（提高执行效率）")]),s._v(" "),a("p",[s._v("默认不会将数据打乱重新组合，可能会出现"),a("strong",[s._v("数据倾斜")]),s._v("。可以进行shuffle")]),s._v(" "),a("p",[s._v("第一个参数分区个数,第二个是否开启shuffle")]),s._v(" "),a("p",[s._v("也可以扩大分区前提是开启shuffle")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("repartition")]),s._v(": 扩大分区")]),s._v(" "),a("blockquote",[a("p",[s._v("底层调用了coalesce 且开启shuffle")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("sortBy")]),s._v(": 排序")]),s._v(" "),a("blockquote",[a("p",[s._v("底层有shuffle,第二个"),a("strong",[s._v("参数指定排序方式")]),s._v("ture升序(默认)")])])])]),s._v(" "),a("p",[a("strong",[s._v("双Value类型")]),s._v("：")]),s._v(" "),a("ul",[a("li",[a("p",[s._v("intersection :交集")])]),s._v(" "),a("li",[a("p",[s._v("union：并集")])]),s._v(" "),a("li",[a("p",[s._v("subtracr：差集")])]),s._v(" "),a("li",[a("p",[s._v("zip: 拉链  （对应位置结合成一个元组）"),a("strong",[s._v("数据类型可以不一致")])]),s._v(" "),a("blockquote",[a("p",[s._v("注意：分区数量要一致，每个分区元素数量要一致。")])])])]),s._v(" "),a("p",[a("strong",[s._v("Key-Value类型")]),s._v("：")]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("partitionBy")]),s._v(" :按照指定规则重新进行分区")]),s._v(" "),a("blockquote",[a("p",[s._v("默认分区器是：HashPartitioner")]),s._v(" "),a("p",[s._v("可以自定义分区器：实现排序规则")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("reduceBykey")]),s._v(": 按照相同key对value进行聚合")]),s._v(" "),a("blockquote",[a("p",[s._v("(v1,v2) 俩两聚合 如果key为一个就不会参与计算直接返回")]),s._v(" "),a("p",[a("strong",[s._v("有分组有聚合")]),s._v(" 在落盘之前会进行"),a("strong",[s._v("预聚合")]),s._v("(分区内)减少落盘数据量提高IO性能")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("groupBykey")]),s._v("：相同key的数据分在一个组中形成对偶元组")]),s._v(" "),a("blockquote",[a("p",[s._v("（kev,iter(value)）")]),s._v(" "),a("p",[s._v("存在shuffle(必须要落盘才处理,否则会存在内存溢出)，所以shuffle操作性能非常低")]),s._v(" "),a("p",[s._v("有分组和"),a("strong",[s._v("没聚合")]),s._v("(聚合通过别的方式)")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("aggregatebykey")]),s._v(" :分区聚合")]),s._v(" "),a("blockquote",[a("p",[s._v("制定"),a("strong",[s._v("不同的规则")]),s._v("进行分区计算和分区之间计算")]),s._v(" "),a("p",[s._v("存在函数柯里化：俩个参数列表")]),s._v(" "),a("p",[s._v("第一个参数是初始值：传递给分区内进行计算的第一个初始值")]),s._v(" "),a("p",[s._v("第二个参数列表：传递分区内计算规则，传递分区间计算规则")]),s._v(" "),a("p",[a("strong",[s._v("当分区内和分区间相同")]),s._v("可以用 "),a("strong",[s._v("forldBykey")]),s._v(" 进行简化")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("mapValues")]),s._v(" ：key保持不变 对value对象转换")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("combineBykey")]),s._v(" : (相同的key进行操作)(分区内)(分区间)")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("sortByKey")]),s._v(":根据key进行排序")]),s._v(" "),a("blockquote",[a("p",[s._v("K 必须实现 Ordered 接口(特质)")]),s._v(" "),a("p",[s._v("返回一个按照 key 进行排序的")]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" dataRDD1 "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" sparkContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("makeRDD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"a"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"b"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"c"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" sortRDD1"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RDD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" dataRDD1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sortByKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" #正序\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" sortRDD1"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" RDD"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" dataRDD1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sortByKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token boolean"}},[s._v("false")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("#倒序\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br")])])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("join")]),s._v("：连接  相同key的数据连接在一起 类似内连接  笛卡尔积 shuffle 数据倍增长..")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("leftOuterJoin")]),s._v(" :左连接   主/从")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("rightOuterJoin")]),s._v(" : 右连接   主/从")])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("cogroup")]),s._v("：conect+group 相同的key放在一个组中，然后连接在一起")])])]),s._v(" "),a("p",[s._v("案例")]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1516609143867")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("64")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("16")]),s._v("\n时间  省份 城市 用户 广告\n需求：统计出每个省份每个广告被点击数量的Top3\n   "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" sparkConf"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" SparkConf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("setMaster"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"local[*]"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("setAppName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"Operstor"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" sc "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" SparkContext"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("sparkConf"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//map")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" rdd "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" sc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("textFile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"datas/agent.log"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" values"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" Array"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" List"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" rdd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("s "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" arr "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" s"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("split"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('" "')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" arr"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//((a,b),c)")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("reduceByKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("_ "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v(" _"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// ((a,b),iter[C])")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("map "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" ad"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("prv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("ad"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" a"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//(a,(b,iter[C]))")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("groupByKey"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//对a分组")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("mapValues"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("kv "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" list "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" kv"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("toList"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 转换成列表才能调用方法")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" tuples "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" list"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("sortBy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("_"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("_2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("Ordering"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("reverse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//排序反转")]),s._v("\n        tuples"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("take"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//取出前3")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("collect"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    values"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("foreach"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("println"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    sc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("stop"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("h3",{attrs:{id:"rdd行动算子"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rdd行动算子"}},[s._v("#")]),s._v(" RDD行动算子")]),s._v(" "),a("p",[s._v("触发作业的执行的方法")]),s._v(" "),a("blockquote",[a("p",[s._v("底层调用了runjob方法")]),s._v(" "),a("p",[s._v("最后通过邮箱无环图运行runjob里面有个submitjob提交任务")]),s._v(" "),a("p",[a("code",[s._v("最后创建了 new ActiveJob")])])]),s._v(" "),a("ul",[a("li",[a("p",[s._v("reduce  : 俩俩聚合")]),s._v(" "),a("blockquote",[a("p",[s._v("聚集 RDD 中的所有元素，先聚合分区内数据，再聚合分区间数据")])])]),s._v(" "),a("li",[a("p",[s._v("collect ：采集")]),s._v(" "),a("blockquote",[a("p",[s._v("将不同分区的数据按照分区顺序进行采集到Dirver端内存中进行处理，形成"),a("strong",[s._v("数组")])])])]),s._v(" "),a("li",[a("p",[s._v("count ：数据的个数")])]),s._v(" "),a("li",[a("p",[s._v("first：第一个")])]),s._v(" "),a("li",[a("p",[s._v("take：取n个数据")])]),s._v(" "),a("li",[a("p",[s._v("takeOrdered：排序取n个")])]),s._v(" "),a("li",[a("p",[s._v("aggregate：不需要考虑数据的类型")]),s._v(" "),a("blockquote",[a("p",[s._v("初始值会参与分区内分区间计算")])])]),s._v(" "),a("li",[a("p",[s._v("flod：分区内和分区间相同")])]),s._v(" "),a("li",[a("p",[s._v("countBykey：统计key出现次数")])]),s._v(" "),a("li",[a("p",[s._v("countByValue：统计value出现的次数")])]),s._v(" "),a("li",[a("p",[s._v("save 相关")]),s._v(" "),a("blockquote",[a("p",[s._v("saveAsTestFile:文本格式")]),s._v(" "),a("p",[s._v("saveObjectFile: 对象格式")]),s._v(" "),a("p",[s._v("saveSerquenceFile:要求数据格式是k-v类型")])])]),s._v(" "),a("li",[a("p",[s._v("foreacch："),a("strong",[s._v("分布式")]),s._v("遍历RDD每一个元素。executor端")]),s._v(" "),a("blockquote",[a("p",[s._v("RDD的方法和scala集合的方法不一样，集合对象的方法都是在同一个节点的内存中完成的")]),s._v(" "),a("p",[s._v("算子是在executor端执行的")])])])]),s._v(" "),a("h3",{attrs:{id:"rdd-序列化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rdd-序列化"}},[s._v("#")]),s._v(" "),a("strong",[s._v("RDD")]),s._v(" "),a("strong",[s._v("序列化")])]),s._v(" "),a("p",[a("strong",[s._v("闭包检查")]),s._v("：算子以外的代码都是在 Driver 端执行, 算子里面的代码都是在 Executor端执行")]),s._v(" "),a("p",[a("strong",[s._v("Kryo 序列化框架")]),s._v("：java的序列化框架比较重,而Kryo 是serializable的10倍，suffl内部有些就开始使用了")]),s._v(" "),a("p",[a("strong",[s._v("依赖关系")]),s._v("：俩个RDD之间的关系 ："),a("code",[s._v("dependencies 查看依赖关系")])]),s._v(" "),a("ul",[a("li",[a("p",[a("strong",[s._v("血缘关系")]),s._v("：多个连续的RDD依赖关系。："),a("code",[s._v("toDebugString 血缘关系")])]),s._v(" "),a("blockquote",[a("p",[s._v("为了提高RDD的容错性，需要保存RDD之前的关系，防止遇到错误,可根据血缘关系来进行恢复数据")]),s._v(" "),a("p",[s._v("每个RDD都会保存依赖关系。")])])]),s._v(" "),a("li",[a("p",[a("strong",[s._v("宽窄依赖")]),s._v("：")]),s._v(" "),a("blockquote",[a("p",[s._v("oneTOone(窄)依赖：新的RDD一个分区依赖于旧的RDD"),a("strong",[s._v("一个")]),s._v("分区")]),s._v(" "),a("p",[s._v("shuffle(宽)依赖：新的RDD一个分区依赖于旧的RDD"),a("strong",[s._v("多个")]),s._v("分区  task增多 且"),a("strong",[s._v("分阶段")])]),s._v(" "),a("p",[s._v("存在shuffle依赖时,阶段会自动增加一个，阶段数量=shuffle依赖数+1")])])])]),s._v(" "),a("p",[a("strong",[s._v("rdd任务划分")]),s._v("：")]),s._v(" "),a("ul",[a("li",[s._v("application：初始化一个sparkcontext即生成一个application")]),s._v(" "),a("li",[s._v("job ：一个action算子会生成一个job")]),s._v(" "),a("li",[s._v("stage ：等于宽依赖的个数加1")]),s._v(" "),a("li",[s._v("task：一个stage阶段中最后一个rdd分区个数就是task个数")])]),s._v(" "),a("blockquote",[a("p",[s._v("app->job->stage->task 每一层都是1对n的关系")])]),s._v(" "),a("h3",{attrs:{id:"rdd的持久化"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#rdd的持久化"}},[s._v("#")]),s._v(" RDD的持久化")]),s._v(" "),a("blockquote",[a("p",[s._v("默认rdd对象可以重用,数据无法重用，所以为了优化此问题，我们可以将操作的数据持久化，")]),s._v(" "),a("p",[s._v("方便下一次操作时使用，不用从头读取。")])]),s._v(" "),a("p",[a("strong",[s._v("持久化:")])]),s._v(" "),a("ul",[a("li",[a("code",[s._v("cache")]),s._v(" :临时存储到内存中 可能不安全")]),s._v(" "),a("li",[a("code",[s._v("perslist")]),s._v(" :临时存储在磁盘 可设置存储级别，数据安全、执行IO 性能较低")])]),s._v(" "),a("blockquote",[a("p",[s._v("可重用，在行动算子时才执行，但是"),a("strong",[s._v("作业执行完")]),s._v("临时文件都会被"),a("strong",[s._v("删除")])]),s._v(" "),a("p",[s._v("会在血缘关系添加一个新的依赖。")])]),s._v(" "),a("p",[a("strong",[s._v("检查点")]),s._v("："),a("code",[s._v("checkpoint")]),s._v(" 需要落盘 需要指定路径   保存的文件作业"),a("strong",[s._v("执行完文件不会删除")])]),s._v(" "),a("blockquote",[a("p",[s._v("长久保存到文件中，安全，一般"),a("strong",[s._v("独立执行一个作业")]),s._v("。性能低，为了提高性能")]),s._v(" "),a("p",[s._v("一般情况下需要和"),a("strong",[s._v("cache联合使用")]),s._v("，所以先开启cache再开启checkpoint。")]),s._v(" "),a("p",[s._v("执行过程中会切断血缘关系。重新建立新的血缘关系。等同于改变了数据源。")])]),s._v(" "),a("p",[a("strong",[s._v("分区器")]),s._v("：目前支持 Hash(默认) 分区和 Range 分区")]),s._v(" "),a("ul",[a("li",[a("strong",[s._v("Hash")]),s._v("：对于给定的 key，计算其 hashCode,并除以分区个数取余")]),s._v(" "),a("li",[a("strong",[s._v("Range")]),s._v(" ：将一定范围内的数据映射到一个分区中，尽量保证每个分区数据均匀，而且分区间有序")])]),s._v(" "),a("p",[a("strong",[s._v("自定义分区器")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//参考 new HashPartitioner() 进行改造")]),s._v("\n "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/**\n   * 自定义分区器\n   */")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" MyPartitioner"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("partitions"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" Partitioner"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//分区数")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("override")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" numPartitions"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" partitions\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//分区索引 从0开始 根据key值返回数据所在的索引")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("override")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" getPartition"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("key"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Any")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Int")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//模式匹配 根if else 一样")]),s._v("\n      key "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("match")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"nba"')]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"cba"')]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" _"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//使用")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" pardd"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" rdd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("partitionBy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" MyPartitioner"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//传入个数")]),s._v("\n    pardd"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("saveAsTextFile"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"output1"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br")])]),a("p",[a("strong",[s._v("rdd文件读取和保存")])]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[s._v("#保存\nsave"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n#读取\ntextFile\nobjectFile\nsequenceFile\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br")])]),a("h3",{attrs:{id:"累加器"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#累加器"}},[s._v("#")]),s._v(" 累加器")]),s._v(" "),a("p",[s._v("共享只写变量。")]),s._v(" "),a("p",[s._v("acc：让spark知道Dirver的数据传给executor计算完的结果要"),a("strong",[s._v("返回")]),s._v("给Dirver,然后将返回的结果进行累加合并")]),s._v(" "),a("p",[a("strong",[s._v("默认简单聚合")]),s._v("："),a("code",[s._v("longaccumulator double....")]),s._v("  可以起个名字  add方法将数值加入累加器中 value获取值")]),s._v(" "),a("blockquote",[a("p",[s._v("少加：转换算子调用累加器  没有行动算子 不会执行")]),s._v(" "),a("p",[s._v("多加：出现多个行动算子，每个行动算子都会执行到这个转换转换算子")]),s._v(" "),a("p",[s._v("一般情况下累加器会放在一个行动算子中。")])]),s._v(" "),a("p",[a("strong",[s._v("自定义累加器")]),s._v("：")]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("// 参考 longAccumulator 实现  #可以避免shuffle")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("/** *\n   * 自定义数据累加器\n   * 继承AccumulatorV2 指定泛型\n   * 累加器输入类型\n   * 累加器返回类型\n   */")]),s._v("\n  "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("class")]),s._v(" MyAccumulator "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("extends")]),s._v(" AccumulatorV2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" mutable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Long")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("private")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("var")]),s._v(" wcMap"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("mutable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Long")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//判断是否为初始状态")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("override")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" isZero"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Boolean")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("wcMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("isEmpty\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//复制一个新的累加器")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("override")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" copy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" AccumulatorV2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" mutable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Long")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" MyAccumulator\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//重置累加器")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("override")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" reset"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Unit")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" wcMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("clear"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//获取输入")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("override")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" add"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("v"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Unit")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" newCut"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("wcMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("getOrElse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0l")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),s._v("\n      wcMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("v"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("newCut"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//Dirver合并多个累加器")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("override")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" merge"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("other"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" AccumulatorV2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" mutable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Long")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Unit")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" map1"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("wcMap\n      "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" map2"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("other"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("value\n      map2"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("foreach"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("case")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("work"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("count"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("=>")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("{")]),s._v("\n       "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" newCount"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("map1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("getOrElse"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("work"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("0L")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1")]),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("+")]),s._v("count\n          "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//更新")]),s._v("\n          map1"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("update"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("work"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("newCount"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n      "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//输出")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("override")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("def")]),s._v(" value"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v(" mutable"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("Map"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("[")]),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token builtin"}},[s._v("Long")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("]")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v("  wcMap\n  "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("}")]),s._v("\n\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//创建累加器对象")]),s._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("val")]),s._v(" wcAcc "),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("=")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("new")]),s._v(" MyAccumulator\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[s._v("//注册累加器")]),s._v("\n    sc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("register"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("wcAcc"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[s._v('"wordCountAcc"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br"),a("span",{staticClass:"line-number"},[s._v("13")]),a("br"),a("span",{staticClass:"line-number"},[s._v("14")]),a("br"),a("span",{staticClass:"line-number"},[s._v("15")]),a("br"),a("span",{staticClass:"line-number"},[s._v("16")]),a("br"),a("span",{staticClass:"line-number"},[s._v("17")]),a("br"),a("span",{staticClass:"line-number"},[s._v("18")]),a("br"),a("span",{staticClass:"line-number"},[s._v("19")]),a("br"),a("span",{staticClass:"line-number"},[s._v("20")]),a("br"),a("span",{staticClass:"line-number"},[s._v("21")]),a("br"),a("span",{staticClass:"line-number"},[s._v("22")]),a("br"),a("span",{staticClass:"line-number"},[s._v("23")]),a("br"),a("span",{staticClass:"line-number"},[s._v("24")]),a("br"),a("span",{staticClass:"line-number"},[s._v("25")]),a("br"),a("span",{staticClass:"line-number"},[s._v("26")]),a("br"),a("span",{staticClass:"line-number"},[s._v("27")]),a("br"),a("span",{staticClass:"line-number"},[s._v("28")]),a("br"),a("span",{staticClass:"line-number"},[s._v("29")]),a("br"),a("span",{staticClass:"line-number"},[s._v("30")]),a("br"),a("span",{staticClass:"line-number"},[s._v("31")]),a("br"),a("span",{staticClass:"line-number"},[s._v("32")]),a("br"),a("span",{staticClass:"line-number"},[s._v("33")]),a("br"),a("span",{staticClass:"line-number"},[s._v("34")]),a("br"),a("span",{staticClass:"line-number"},[s._v("35")]),a("br"),a("span",{staticClass:"line-number"},[s._v("36")]),a("br"),a("span",{staticClass:"line-number"},[s._v("37")]),a("br"),a("span",{staticClass:"line-number"},[s._v("38")]),a("br"),a("span",{staticClass:"line-number"},[s._v("39")]),a("br"),a("span",{staticClass:"line-number"},[s._v("40")]),a("br"),a("span",{staticClass:"line-number"},[s._v("41")]),a("br"),a("span",{staticClass:"line-number"},[s._v("42")]),a("br"),a("span",{staticClass:"line-number"},[s._v("43")]),a("br")])]),a("h3",{attrs:{id:"广播变量"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#广播变量"}},[s._v("#")]),s._v(" 广播变量")]),s._v(" "),a("p",[s._v("闭包数据是以task为单位进行发送的，每个任务都包含闭包数据，可能导致executor中有大量重复数据。")]),s._v(" "),a("p",[s._v("executor是一个jvm进程 所以在启动时会自动分配到内存。可以把数据加载到这个内存中提供给每个task使用")]),s._v(" "),a("p",[s._v("这就是广播变量，但是"),a("strong",[s._v("广播变量不能更改")]),s._v("。")]),s._v(" "),a("p",[s._v("是"),a("strong",[s._v("分布式共享的只读变量")]),s._v(" "),a("code",[s._v("broadcast(数据)")])]),s._v(" "),a("h2",{attrs:{id:"工程化架构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工程化架构"}},[s._v("#")]),s._v(" 工程化架构")]),s._v(" "),a("p",[s._v("例如：MVC : model view Controller")]),s._v(" "),a("ul",[a("li",[s._v("业务：逻辑")]),s._v(" "),a("li",[s._v("数据：封装")])]),s._v(" "),a("p",[a("strong",[s._v("三层架构")]),s._v(": Controller(控制 调度) server(服务层 逻辑) dao(持久层 操作文件)")]),s._v(" "),a("div",{staticClass:"language-scala line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-scala"}},[a("code",[s._v("目录结构：\n入口"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v("conterller"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v("server"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v("->")]),s._v("dao\n#里面可以放置对应属性\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("1.")]),s._v(" conterller #控制层 例"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("创建方法调度服务层方法\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("2.")]),s._v(" server\t#服务层   例：创建方法提供给控制层调用"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("写逻辑代码"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("真正调用数据调用持久层方法\t\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("3.")]),s._v(" dao\t\t#持久层   例：创建操作数据方法提供给逻辑"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("服务"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("层调用 例"),a("span",{pre:!0,attrs:{class:"token operator"}},[s._v(":")]),s._v("读取文件等等"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("4.")]),s._v(" application #入口类 继承APP即可运行 例：可以调用common里的方法"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v("(")]),s._v("传入参数"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v("逻辑"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(")")]),s._v("\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("5.")]),s._v(" common #共同类 共通性 抽取类 \n例：特质类，方法：把环境放里头初始化关闭的创建同一对象的代码等等"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[s._v(",")]),s._v(" 那些执行的方法都可以放进来，\n然后调用时，用"),a("span",{pre:!0,attrs:{class:"token keyword"}},[s._v("with")]),s._v("混入实现即可，类似接口\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("6.")]),s._v(" util #工具类\n"),a("span",{pre:!0,attrs:{class:"token number"}},[s._v("7.")]),s._v(" bean #实体类 例：ThreadLocal类封装方法用来存储线程数据\n")])]),s._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[s._v("1")]),a("br"),a("span",{staticClass:"line-number"},[s._v("2")]),a("br"),a("span",{staticClass:"line-number"},[s._v("3")]),a("br"),a("span",{staticClass:"line-number"},[s._v("4")]),a("br"),a("span",{staticClass:"line-number"},[s._v("5")]),a("br"),a("span",{staticClass:"line-number"},[s._v("6")]),a("br"),a("span",{staticClass:"line-number"},[s._v("7")]),a("br"),a("span",{staticClass:"line-number"},[s._v("8")]),a("br"),a("span",{staticClass:"line-number"},[s._v("9")]),a("br"),a("span",{staticClass:"line-number"},[s._v("10")]),a("br"),a("span",{staticClass:"line-number"},[s._v("11")]),a("br"),a("span",{staticClass:"line-number"},[s._v("12")]),a("br")])]),a("blockquote",[a("p",[a("strong",[s._v("ThreadLocal")]),s._v("可以对"),a("strong",[s._v("线程")]),s._v("的内存进行控制，存储数据,")]),s._v(" "),a("p",[s._v("set(存储数据）")]),s._v(" "),a("p",[s._v("get获取数据")]),s._v(" "),a("p",[s._v("remove删除数据")]),s._v(" "),a("p",[s._v("解释：获取当前线程，存储到map的线程容器中。")])])])}),[],!1,null,null,null);t.default=e.exports}}]);
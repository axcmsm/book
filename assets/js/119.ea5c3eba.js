(window.webpackJsonp=window.webpackJsonp||[]).push([[119],{549:function(t,s,a){"use strict";a.r(s);var e=a(16),n=Object(e.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"redis基本使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis基本使用"}},[t._v("#")]),t._v(" Redis基本使用")]),t._v(" "),a("p",[a("strong",[t._v("Redis部署")])]),t._v(" "),a("p",[t._v("单机部署：")]),t._v(" "),a("ol",[a("li",[t._v("压缩包部署")]),t._v(" "),a("li",[t._v("Docker部署")])]),t._v(" "),a("p",[a("strong",[t._v("启动命令")])]),t._v(" "),a("div",{staticClass:"language-shell line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-shell"}},[a("code",[t._v("redis-cli "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("options"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("commonds"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("常见的options有：")]),t._v(" "),a("ul",[a("li",[a("code",[t._v("-h 127.0.0.1")]),t._v(":连接Redis节点的地址，默认是127.0.0.1")]),t._v(" "),a("li",[a("code",[t._v("-p 6379")]),t._v(":连接Redis的端口，默认是6379")]),t._v(" "),a("li",[a("code",[t._v("-a 123456")]),t._v(":连接Redis的密码")]),t._v(" "),a("li",[a("code",[t._v("--raw")]),t._v(" :输出中文")])]),t._v(" "),a("p",[t._v("其中commonds是Redis的操作命令，例如："),a("code",[t._v("ping")]),t._v(" 心跳检测等")]),t._v(" "),a("h2",{attrs:{id:"redis常用的数据结构"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis常用的数据结构"}},[t._v("#")]),t._v(" Redis常用的数据结构")]),t._v(" "),a("p",[t._v("String,Hash,List,Set,SortedSet => 基本类型")]),t._v(" "),a("p",[t._v("GEO,BitMap,HyperLog => 特殊类型")]),t._v(" "),a("p",[a("strong",[t._v("文档查询")]),t._v("："),a("a",{attrs:{href:"https://redis.io/commands/",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://redis.io/commands/"),a("OutboundLink")],1)]),t._v(" "),a("hr"),t._v(" "),a("p",[a("code",[t._v("help [commands]")]),t._v(" 查询命令帮助信息")]),t._v(" "),a("h3",{attrs:{id:"通用命令"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#通用命令"}},[t._v("#")]),t._v(" 通用命令")]),t._v(" "),a("ul",[a("li",[t._v("keys : 查询所有Key,不建议在生产设备上使用，单线程，会堵塞请求")]),t._v(" "),a("li",[t._v("del : 删除key")]),t._v(" "),a("li",[t._v("exists : 判断kEY 是否存在")]),t._v(" "),a("li",[t._v("expire : 给key设置有效期")]),t._v(" "),a("li",[t._v("ttl : 查看有效期 （-1 永久有效，-2 已删除)")])]),t._v(" "),a("h3",{attrs:{id:"string-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#string-类型"}},[t._v("#")]),t._v(" String 类型")]),t._v(" "),a("p",[t._v("字符串类型：Value是字符串，最大空间不能超过512M。")]),t._v(" "),a("p",[a("strong",[t._v("常用命令")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("set ：添加或修改")]),t._v(" "),a("li",[t._v("get ：取key的值")]),t._v(" "),a("li",[t._v("mset ： 批量添加")]),t._v(" "),a("li",[t._v("mget ： 批量获取")]),t._v(" "),a("li",[t._v("incr ：  让整数的value自增1")]),t._v(" "),a("li",[t._v("incrby ：让一个整型的key自增并指定步长")]),t._v(" "),a("li",[t._v("setnx ：添加一个String的键值对，前提是key不存在")]),t._v(" "),a("li",[t._v("setex ：添加一个String的键值对，并且指定有效期")])]),t._v(" "),a("p",[t._v("key的层级定义：可以使用拼接key来区分业务key的值.")]),t._v(" "),a("p",[t._v("例如："),a("code",[t._v("项目:业务:服务:数据库:表:id")]),t._v(" => "),a("code",[t._v('{"id":1,"name":"张三","age":13}')])]),t._v(" "),a("h3",{attrs:{id:"hash-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#hash-类型"}},[t._v("#")]),t._v(" Hash 类型")]),t._v(" "),a("p",[t._v("Hash类型：Value是无序字典，类似Java中的HashMap结构。")]),t._v(" "),a("p",[t._v("相对于String类型存储的Json格式，可以方便的对其中的keyValue类型进行更改。")]),t._v(" "),a("p",[a("strong",[t._v("常用命令")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("hset key  field value ： 添加或修改")]),t._v(" "),a("li",[t._v("hget key  field ： 获取key中的field的值")]),t._v(" "),a("li",[t._v("hmset ： 批量添加多个hash类型的key的field的值")]),t._v(" "),a("li",[t._v("hmget ：批量的获取多个hash类型的key中field的值")]),t._v(" "),a("li",[t._v("hgetall ： 取key中的所有field和value")]),t._v(" "),a("li",[t._v("hkeys ： 获取key中的所有field")]),t._v(" "),a("li",[t._v("hvalues ：获取key中的所有value")]),t._v(" "),a("li",[t._v("hincrby ：让一个hash类型的key的字段值自增并指定步长")]),t._v(" "),a("li",[t._v("hsetnx ：添加一个hash类型的key的field值，前提是field不存在")])]),t._v(" "),a("h3",{attrs:{id:"list-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#list-类型"}},[t._v("#")]),t._v(" List 类型")]),t._v(" "),a("p",[t._v("List类型，Value是双向链表结构，类似Java中的LinkedList，可以支持正向检索也可以支持反向检索。")]),t._v(" "),a("p",[t._v("特征：有序，元素可重复，插入和删除快，查询速度一般")]),t._v(" "),a("p",[t._v("常用于存储有序数据，例如：评论列表，点赞列表等")]),t._v(" "),a("p",[a("strong",[t._v("常用命令")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("lpush key element ：从左边插入一个或多个元素")]),t._v(" "),a("li",[t._v("lpop key ；移除斌返回列表第一个元素，没有返回null")]),t._v(" "),a("li",[t._v("rpush key element ：向右边插入一个或多个元素")]),t._v(" "),a("li",[t._v("rpop key ：移除并返回列表右侧的第一个元素")]),t._v(" "),a("li",[t._v("lrange key star end ： 返回一段角标范围内的所有元素")]),t._v(" "),a("li",[t._v("blpop和brpop ：与lpop和rpop类似，没有元素时等待指定时间，而不是直接返回nil(堵塞式获取)")])]),t._v(" "),a("p",[t._v("模拟栈：入口和出口在同一边")]),t._v(" "),a("p",[t._v("模拟队列：入口和出口不在同边")]),t._v(" "),a("p",[t._v("模拟堵塞队列：入口和出口在不同边，出队时采用blpop或brpop")]),t._v(" "),a("h3",{attrs:{id:"set-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#set-类型"}},[t._v("#")]),t._v(" Set 类型")]),t._v(" "),a("p",[t._v("set 类型，value是value为null的hashMap，与Java中的HashSet类似")]),t._v(" "),a("p",[t._v("特征：无序，元素不可重复，查找快，支持交集，并集，差集等功能")]),t._v(" "),a("p",[a("strong",[t._v("常用命令")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("sadd key member ：向set中添加一个或多个元素")]),t._v(" "),a("li",[t._v("srem key member ：移除set中的指定元素")]),t._v(" "),a("li",[t._v("scard key ：返回set中的元素的个数")]),t._v(" "),a("li",[t._v("sismember key member ：判断一个元素是否存在于set中")]),t._v(" "),a("li",[t._v("smembers ： 获取set中的所有元素")]),t._v(" "),a("li",[t._v("sinter key1 key2 ... : 求key1与key2 的交集")]),t._v(" "),a("li",[t._v("sdiff key1 key2 .. ：求key与key2 的差集")]),t._v(" "),a("li",[t._v("sunion key1 key2 .. ：求key与key2 的并集")])]),t._v(" "),a("h3",{attrs:{id:"sortedset-类型"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#sortedset-类型"}},[t._v("#")]),t._v(" SortedSet 类型")]),t._v(" "),a("p",[t._v("SortedSet 类型，可以排序的set集合，类似Java中的TreeSet，但底层数据结构却差别很大。")]),t._v(" "),a("p",[t._v("特征：可排序，元素不重复，查询速度快")]),t._v(" "),a("p",[t._v("通常用于：排行榜的功能")]),t._v(" "),a("p",[a("strong",[t._v("常用命令")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("zdd key score member ：添加一个或多个元素到sorted set，如果已存在则更新其score值。")]),t._v(" "),a("li",[t._v("zrem key member ：删除sorted set 中的一个指定元素")]),t._v(" "),a("li",[t._v("zscore key member ：获取sorted set 中的指定元素的score值")]),t._v(" "),a("li",[t._v("zrank key member ：获取sorted set 中的指定元素的排名")]),t._v(" "),a("li",[t._v("zcard key member ：获取sorted set 中的指定元素的个数")]),t._v(" "),a("li",[t._v("zcount key min max ：统计score值在给定的范围内的所有元素个数")]),t._v(" "),a("li",[t._v("zincrby key increment member ：让sorted set 中元素自增，步长为指定的increment的值")]),t._v(" "),a("li",[t._v("zrange key min max ：按照score排序后，获取指定排名范围内的元素")]),t._v(" "),a("li",[t._v("zrangebyscore key min max ：按照score排序，获取score范围内的元素")]),t._v(" "),a("li",[t._v("zdiff,zinter,zunion ：求差集，交集，并集")])]),t._v(" "),a("p",[t._v("默认是升序：Zrev 降序")]),t._v(" "),a("h3",{attrs:{id:"redis的java客户端"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redis的java客户端"}},[t._v("#")]),t._v(" Redis的Java客户端")]),t._v(" "),a("h3",{attrs:{id:"jedis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jedis"}},[t._v("#")]),t._v(" Jedis")]),t._v(" "),a("p",[t._v("以Redis的命令作为方法名称，简单实用。但是Jedis实例线程不安全的，多线程环境下需要基于连接池来使用。")]),t._v(" "),a("h3",{attrs:{id:"lettuce"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#lettuce"}},[t._v("#")]),t._v(" Lettuce")]),t._v(" "),a("p",[t._v("底层基于Netty实现，支持同步，异步和响应式编程方式，并且线程安全。支持Redis的哨兵模式，集群模式和管道模式。")]),t._v(" "),a("h3",{attrs:{id:"redissson"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#redissson"}},[t._v("#")]),t._v(" redissson")]),t._v(" "),a("p",[t._v("基于Redis实现的分布式，可伸缩的Java数据结构集合。包含了Map，Queue，Lock，Semaphore，AtomicLong等强大的功能。")]),t._v(" "),a("h2",{attrs:{id:"常用的日常操作"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#常用的日常操作"}},[t._v("#")]),t._v(" 常用的日常操作")]),t._v(" "),a("ul",[a("li",[t._v("Jedis")]),t._v(" "),a("li",[t._v("Lettuce")])]),t._v(" "),a("p",[t._v("操作方式：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("原生Jedis")]),t._v(" "),a("div",{staticClass:"language-xml line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-xml"}},[a("code",[t._v("    "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependencies")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("\x3c!-- https://mvnrepository.com/artifact/redis.clients/jedis --\x3e")]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("redis.clients"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("jedis"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("4.3.1"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("org.junit.jupiter"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("groupId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("junit-jupiter"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("artifactId")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("5.9.2"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("version")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n         "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),t._v("scope")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("test"),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("scope")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n     "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependency")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n "),a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token tag"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("</")]),t._v("dependencies")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br")])])]),t._v(" "),a("li",[a("p",[t._v("SpringBoot Data Redis")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("Jedis")])]),t._v(" "),a("li",[a("p",[t._v("Lettuce")]),t._v(" "),a("p",[t._v("RedisTemplate 俩种序列化实践方案")]),t._v(" "),a("ol",[a("li",[t._v("自定义RedisTemplate,修改序列器为 GenericJackson2JsonRedisSerializer.")]),t._v(" "),a("li",[t._v("使用StringRedisTemplate,读写Redis时需要手动json序列化.")])]),t._v(" "),a("p",[t._v("推荐第2种方案，第2种跨平台性高一些，也节省了一些存储的开销。")])])])])]),t._v(" "),a("p",[a("a",{attrs:{href:"https://spring.io/projects/spring-data-redis#learn",target:"_blank",rel:"noopener noreferrer"}},[a("strong",[t._v("SpringBoot Data地址")]),a("OutboundLink")],1)]),t._v(" "),a("hr"),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("代码地址")]),t._v(":"),a("a",{attrs:{href:"https://github.com/axcmsm/redis_study",target:"_blank",rel:"noopener noreferrer"}},[t._v("https://github.com/axcmsm/redis_study"),a("OutboundLink")],1)])])])}),[],!1,null,null,null);s.default=n.exports}}]);
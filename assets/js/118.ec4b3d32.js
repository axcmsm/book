(window.webpackJsonp=window.webpackJsonp||[]).push([[118],{548:function(t,s,a){"use strict";a.r(s);var n=a(16),e=Object(n.a)({},(function(){var t=this,s=t.$createElement,a=t._self._c||s;return a("ContentSlotsDistributor",{attrs:{"slot-key":t.$parent.slotKey}},[a("h2",{attrs:{id:"spring"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring"}},[t._v("#")]),t._v(" Spring")]),t._v(" "),a("p",[a("strong",[t._v("OCP开闭原则")]),t._v("：对扩展开发，对修改关闭。")]),t._v(" "),a("p",[a("strong",[t._v("DIP依赖倒置原则")]),t._v("：上不在依赖下，需要面向接口,抽象编程，不面向具体编程。")]),t._v(" "),a("blockquote",[a("p",[t._v("可采用控制反转编程思想解决上述问题。")])]),t._v(" "),a("p",[a("strong",[t._v("控制反转(IoC)")]),t._v("：解决上述问题。")]),t._v(" "),a("ol",[a("li",[t._v("不采用硬编码的方式new对象")]),t._v(" "),a("li",[t._v("不采用硬编码的方式来维护对象的关系")])]),t._v(" "),a("blockquote",[a("p",[t._v("是一种编程思想，新型的设计模块。出现年代比较新，没有被纳入Go23种设计模式范围内。")])]),t._v(" "),a("p",[a("strong",[t._v("Spring框架实现了Ioc思想的容器。")])]),t._v(" "),a("p",[t._v("控制反转的实现方式有多种，其中比较重要的叫做：依赖注入(DI)。")]),t._v(" "),a("p",[a("strong",[t._v("依赖注入DI")]),t._v(":控制反转是思想，依赖注入的这种思想的具体实现。依赖注入场景的俩种方式：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("set注入(执行set方法给属性赋值)")])]),t._v(" "),a("li",[a("p",[t._v("构造方法注入(执行构造方法给属性赋值)")])])]),t._v(" "),a("blockquote",[a("p",[t._v("依赖：A对象和B对象的关系。")]),t._v(" "),a("p",[t._v("注入：是一种手段，通过这种手段，可以让A对象和B对象产生关系。")])]),t._v(" "),a("h2",{attrs:{id:"简介"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简介"}},[t._v("#")]),t._v(" 简介")]),t._v(" "),a("p",[t._v("Spring是一个轻量级的**控制反转(IoC)"),a("strong",[t._v("和")]),t._v("面向切面(AOP)**的容器框架。Spring最初的出现是为了解决EJB臃肿的设计，以及难以测试等问题。Spring为简化开发而生，让程序员只需关注核心业务的实现，尽可能的不再关注非业务逻辑代码（事务控制，安全日志等）。")]),t._v(" "),a("p",[a("strong",[t._v("8大模块")]),t._v("：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("Spring Core模块")]),t._v(" "),a("blockquote",[a("p",[t._v("这是Spring框架最基础的部分，它提供了依赖注入（DependencyInjection）特征来实现容器对Bean的管理。核心容器的主要组件是 BeanFactory，BeanFactory是工厂模式的一个实现，是任何Spring应用的核心。它使用IoC将应用配置和依赖从实际的应用代码中分离出来。")])])]),t._v(" "),a("li",[a("p",[t._v("Spring Context模块")]),t._v(" "),a("blockquote",[a("p",[t._v("如果说核心模块中的BeanFactory使Spring成为容器的话，那么上下文模块就是Spring成为框架的原因。")]),t._v(" "),a("p",[t._v("这个模块扩展了BeanFactory，增加了对国际化（I18N）消息、事件传播、验证的支持。另外提供了许多企业服务，例如电子邮件、JNDI访问、EJB集成、远程以及时序调度（scheduling）服务。也包括了对模版框架例如Velocity和FreeMarker集成的支持")])])]),t._v(" "),a("li",[a("p",[t._v("Spring AOP模块")]),t._v(" "),a("blockquote",[a("p",[t._v("Spring在它的AOP模块中提供了对面向切面编程的丰富支持，Spring AOP 模块为基于 Spring 的应用程序中的对象提供了事务管理服务。通过使用 Spring AOP，不用依赖组件，就可以将声明性事务管理集成到应用程序中，可以自定义拦截器、切点、日志等操作。")])])]),t._v(" "),a("li",[a("p",[t._v("Spring DAO模块")]),t._v(" "),a("blockquote",[a("p",[t._v("提供了一个JDBC的抽象层和异常层次结构，消除了烦琐的JDBC编码和数据库厂商特有的错误代码解析，用于简化JDBC。")])])]),t._v(" "),a("li",[a("p",[t._v("Spring ORM模块")]),t._v(" "),a("blockquote",[a("p",[t._v("Spring提供了ORM模块。Spring并不试图实现它自己的ORM解决方案，而是为几种流行的ORM框架提供了集成方案，包括Hibernate、JDO和iBATIS SQL映射，这些都遵从 Spring 的通用事务和 DAO 异常层次结构。")])])]),t._v(" "),a("li",[a("p",[t._v("Spring Web MVC模块")]),t._v(" "),a("blockquote",[a("p",[t._v("Spring为构建Web应用提供了一个功能全面的MVC框架。虽然Spring可以很容易地与其它MVC框架集成，例如Struts，但Spring的MVC框架使用IoC对控制逻辑和业务对象提供了完全的分离。")])])]),t._v(" "),a("li",[a("p",[t._v("Spring WebFlux模块")]),t._v(" "),a("blockquote",[a("p",[t._v("Spring Framework 中包含的原始 Web 框架 Spring Web MVC 是专门为 Servlet API 和 Servlet 容器构建的。反应式堆栈 Web 框架 Spring WebFlux 是在 5.0 版的后期添加的。它是完全非阻塞的，支持反应式流(Reactive Stream)背压，并在Netty，Undertow和Servlet 3.1+容器等服务器上运行。")])])]),t._v(" "),a("li",[a("p",[t._v("Spring Web模块")]),t._v(" "),a("blockquote",[a("p",[t._v("Web 上下文模块建立在应用程序上下文模块之上，为基于 Web 的应用程序提供了上下文，提供了Spring和其它Web框架的集成，比如Struts、WebWork。还提供了一些面向服务支持，例如：实现文件上传的multipart请求。")])])])]),t._v(" "),a("p",[a("strong",[t._v("特点")]),t._v("：轻量、控制反转、面向切面、容器、框架")]),t._v(" "),a("h2",{attrs:{id:"入门"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#入门"}},[t._v("#")]),t._v(" 入门")]),t._v(" "),a("p",[a("strong",[t._v("官网地址")]),t._v("：https://spring.io/")]),t._v(" "),a("p",[a("strong",[t._v("中文地址")]),t._v("："),a("a",{attrs:{href:"http://spring.p2hp.com/",target:"_blank",rel:"noopener noreferrer"}},[t._v("http://spring.p2hp.com/"),a("OutboundLink")],1)]),t._v(" "),a("p",[a("strong",[t._v("案例")]),t._v("：")]),t._v(" "),a("p",[t._v("Spring在默认情况下，通过反射机制，调用类的"),a("strong",[t._v("无参构造方法")]),t._v("来实例化该对象。")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// dom4j解析beans.xml文件，从中获取class的全限定类名")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过反射机制调用无参数构造方法创建对象")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),t._v(" clazz "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.powernode.spring6.bean.User"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" clazz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("newInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br")])]),a("p",[t._v("存储到一个Map<String,Object>的数据结构中，根据key获取对象。")]),t._v(" "),a("p",[a("strong",[t._v("ApplicationContext的超级父接口BeanFactory")])]),t._v(" "),a("p",[t._v("BeanFactory是IoC容器的顶级接口。Ioc容器底层实际上使用了工厂模式。")]),t._v(" "),a("p",[a("strong",[t._v("Sping底层IoC是怎么实现的")]),t._v("：XML解析+工厂模式+反射机制。")]),t._v(" "),a("h2",{attrs:{id:"ioc的实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ioc的实现"}},[t._v("#")]),t._v(" IOC的实现")]),t._v(" "),a("p",[a("strong",[t._v("IoC")]),t._v("：是一种思想，为了降低耦合度，提高扩展力，达到OCP、DIP原则。")]),t._v(" "),a("ul",[a("li",[t._v("将对象的创建权利交出去，交给第三方容器负责。")]),t._v(" "),a("li",[t._v("将对象和对象之间关系的维护权交出去，交给第三方容器负责。")])]),t._v(" "),a("blockquote",[a("p",[t._v("IoC的具体实现：依赖注入DI")])]),t._v(" "),a("p",[a("strong",[t._v("依赖注入")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("set注入")]),t._v(" "),a("li",[t._v("构造注入")])]),t._v(" "),a("p",[a("strong",[t._v("set注入xml常用方式")]),t._v("：")]),t._v(" "),a("blockquote",[a("p",[t._v("内部、外部、简单类型、引用类型、数组、集合、set、map、properties、null和空字符串、特殊符号。")])]),t._v(" "),a("p",[a("strong",[t._v("命名空间注入")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("p命名空间注入：底层还是set注入，需要提供setter方法，实际就是对set注入的简化。")]),t._v(" "),a("li",[t._v("c命名空间注入：底层是构造注入，需要提供构造器，简化构造方法注入。")]),t._v(" "),a("li",[t._v("util命名空间注入：")])]),t._v(" "),a("p",[t._v("**基于XML自动装配：**基于set方法")]),t._v(" "),a("ul",[a("li",[t._v("名称：方法去掉set，首字母小写。")]),t._v(" "),a("li",[t._v("类型：只能有一个唯一的属性。")])]),t._v(" "),a("p",[a("strong",[t._v("引入外部属性配置文件")]),t._v("：context")]),t._v(" "),a("blockquote",[a("p",[t._v("${}取值时，默认先加载window系统的环境变量，建议配置加上前缀。")])]),t._v(" "),a("h2",{attrs:{id:"bean的作用域"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bean的作用域"}},[t._v("#")]),t._v(" Bean的作用域")]),t._v(" "),a("blockquote",[a("p",[t._v("默认情况下，Spring的IoC容器创建的Bean对象是单例的。在Spring上下文初始化的时候进行实例化，每一次调用getBean方法的时候，都返回一个单例对象。")])]),t._v(" "),a("p",[a("strong",[t._v("作用域")]),t._v("：8种")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("单例：scope=> "),a("strong",[t._v("singleton")]),t._v("。上下文初始化的时候进行实例化。每一次调用getBean方法的时候，都返回一个单例对象。")])]),t._v(" "),a("li",[a("p",[t._v("原型/多例：scope=> "),a("strong",[t._v("prototype")]),t._v("。上下文初始化的时候，并不会初始化这些bean。每一次执行getBean()方法的时候创建Bean对象。")])]),t._v(" "),a("li",[a("p",[t._v("request：一个请求对应一个Bean。"),a("strong",[t._v("仅限于在WEB应用中使用")]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("session：一个会话对应一个Bean。"),a("strong",[t._v("仅限于在WEB应用中使用")]),t._v("。")])]),t._v(" "),a("li",[a("p",[t._v("global session："),a("strong",[t._v("portlet应用中专用的")]),t._v("。如果在Servlet的WEB应用中使用global session的话，和session一个效果。（portlet和servlet都是规范。servlet运行在servlet容器中，例如Tomcat。portlet运行在portlet容器中。）")])]),t._v(" "),a("li",[a("p",[t._v("application：一个应用对应一个Bean。"),a("strong",[t._v("仅限于在WEB应用中使用。")])])]),t._v(" "),a("li",[a("p",[t._v("websocket：一个websocket生命周期对应一个Bean。"),a("strong",[t._v("仅限于在WEB应用中使用。")])])]),t._v(" "),a("li",[a("p",[t._v("自定义scope：很少使用。")])])]),t._v(" "),a("h2",{attrs:{id:"gof之工厂模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gof之工厂模式"}},[t._v("#")]),t._v(" GoF之工厂模式")]),t._v(" "),a("blockquote",[a("p",[t._v("设计模式：一种可以被重复利用的解决方案。")]),t._v(" "),a("p",[t._v("GoF（Gang of Four），中文名——四人组。")]),t._v(" "),a("p",[t._v('《Design Patterns: Elements of Reusable Object-Oriented Software》（即《设计模式》一书），1995年由 Erich Gamma、Richard Helm、Ralph Johnson 和 John Vlissides 合著。这几位作者常被称为"四人组（Gang of Four）"。')]),t._v(" "),a("p",[t._v("该书中描述了23种设计模式。我们平常所说的设计模式就是指这23种设计模式。")]),t._v(" "),a("p",[t._v("不过除了GoF23种设计模式之外，还有其它的设计模式，比如：JavaEE的设计模式（DAO模式、MVC模式等）。")])]),t._v(" "),a("p",[a("strong",[t._v("GoF23种设计模式可分为三大类")]),t._v("：")]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("创建型")]),t._v("（5个）：解决对象创建问题。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("单例模式")])]),t._v(" "),a("li",[a("p",[t._v("工厂方法模式")])]),t._v(" "),a("li",[a("p",[t._v("抽象工厂模式")])]),t._v(" "),a("li",[a("p",[t._v("建造者模式")])]),t._v(" "),a("li",[a("p",[t._v("原型模式")])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("结构型")]),t._v("（7个）：一些类或对象组合在一起的经典结构。")]),t._v(" "),a("ul",[a("li",[t._v("代理模式")]),t._v(" "),a("li",[t._v("装饰模式")]),t._v(" "),a("li",[t._v("适配器模式")]),t._v(" "),a("li",[t._v("组合模式")]),t._v(" "),a("li",[t._v("享元模式")]),t._v(" "),a("li",[t._v("外观模式")]),t._v(" "),a("li",[t._v("桥接模式")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("行为型")]),t._v("（11个）：解决类或对象之间的交互问题。")]),t._v(" "),a("ul",[a("li",[t._v("策略模式")]),t._v(" "),a("li",[t._v("模板方法模式")]),t._v(" "),a("li",[t._v("责任链模式")]),t._v(" "),a("li",[t._v("观察者模式")]),t._v(" "),a("li",[t._v("迭代子模式")]),t._v(" "),a("li",[t._v("命令模式")]),t._v(" "),a("li",[t._v("备忘录模式")]),t._v(" "),a("li",[t._v("状态模式")]),t._v(" "),a("li",[t._v("访问者模式")]),t._v(" "),a("li",[t._v("中介者模式")]),t._v(" "),a("li",[t._v("解释器模式")])])])]),t._v(" "),a("blockquote",[a("p",[t._v("这是因为Spring框架底层使用了大量的工厂模式")])]),t._v(" "),a("p",[a("strong",[t._v("工厂模式的形态")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("第一种："),a("strong",[t._v("简单工厂模式（Simple Factory）：不属于23种设计模式之一。简单工厂模式又叫做：静态 工厂方法模式。简单工厂模式是工厂方法模式的一种特殊实现。")])]),t._v(" "),a("li",[t._v("第二种：工厂方法模式（Factory Method）：是23种设计模式之一。")]),t._v(" "),a("li",[t._v("第三种：抽象工厂模式（Abstract Factory）：是23种设计模式之一。")])]),t._v(" "),a("h3",{attrs:{id:"简单工厂"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#简单工厂"}},[t._v("#")]),t._v(" 简单工厂")]),t._v(" "),a("p",[a("strong",[t._v("简单工厂角色")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("抽象产品角色")]),t._v(" "),a("li",[t._v("具体产品角色")]),t._v(" "),a("li",[t._v("工厂类角色：提供"),a("strong",[t._v("静态方法")]),t._v("，根据传入的参数返回不同的东西。")])]),t._v(" "),a("blockquote",[a("p",[t._v("客户端程序不需要关心对象的创建细节，需要哪个对象时，只需要向工厂索要即可，初步实现了责任的分离。客户端只负责“消费”，工厂负责“生产”。生产和消费分离。")]),t._v(" "),a("p",[a("strong",[t._v("Spring中的BeanFactory就使用了简单工厂模式。")])])]),t._v(" "),a("p",[a("strong",[t._v("简单工厂缺点")]),t._v("：")]),t._v(" "),a("ol",[a("li",[t._v("违背OCP开闭原则")]),t._v(" "),a("li",[t._v("工厂类责任较大(全能类)，如果出现问题，整个系统必然瘫痪。")])]),t._v(" "),a("h3",{attrs:{id:"工厂方法"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#工厂方法"}},[t._v("#")]),t._v(" 工厂方法")]),t._v(" "),a("p",[a("strong",[t._v("工厂方法模式")]),t._v("：可以解决OCP问题，一个工厂对应一种产品。也不再是全能类。")]),t._v(" "),a("p",[a("strong",[t._v("角色")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("抽象产品角色")]),t._v(" "),a("li",[t._v("具体产品角色")]),t._v(" "),a("li",[t._v("抽象工厂角色：提供实例的抽象方法。")]),t._v(" "),a("li",[t._v("具体工厂角色：根据抽象方法进行具体的实现。")])]),t._v(" "),a("blockquote",[a("p",[t._v("扩展产品的时候，符合OCP原则，只需要添加俩个类，具体产品类，具体工厂类型，没有需改之前的代码。符合OCP.")])]),t._v(" "),a("p",[a("strong",[t._v("缺点")]),t._v("：每次增加一个产品时，都需要增加一个具体类和对象实现工厂，使得系统中类的个数成倍增加，在一定程度上增加了系统的复杂度，同时也增加了系统具体类的依赖。这并不是什么好事。")]),t._v(" "),a("h2",{attrs:{id:"bean的实例化方式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bean的实例化方式"}},[t._v("#")]),t._v(" Bean的实例化方式")]),t._v(" "),a("p",[t._v("Spring为Bean提供了多种实例化方式，通常包括4种方式。（也就是说在Spring中为Bean对象的创建准备了多种方案，目的是：更加灵活）")]),t._v(" "),a("ul",[a("li",[t._v("第一种：通过构造方法实例化")]),t._v(" "),a("li",[t._v("第二种：通过简单工厂模式实例化")]),t._v(" "),a("li",[t._v("第三种：通过factory-bean实例化：通过工厂方法模式进行实例化。")]),t._v(" "),a("li",[t._v("第四种：通过FactoryBean接口实例化：可以加工。")])]),t._v(" "),a("p",[a("strong",[t._v("BeanFactory和FactoryBean的区别")]),t._v("：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("BeanFactory")]),t._v("：Spring IoC容器的顶级对象，BeanFactory被翻译为“Bean工厂”，在Spring的IoC容器中，“Bean工厂”负责创建Bean对象。")]),t._v(" "),a("li",[a("strong",[t._v("FactoryBean")]),t._v("：它是一个Bean，是一个能够"),a("strong",[t._v("辅助Spring")]),t._v("实例化其它Bean对象的一个Bean。")])]),t._v(" "),a("p",[t._v("在Spring中，Bean可以分为两类：")]),t._v(" "),a("ul",[a("li",[t._v("第一类：普通Bean")]),t._v(" "),a("li",[t._v("第二类：工厂Bean（记住：工厂Bean也是一种Bean，只不过这种Bean比较特殊，它可以辅助Spring实例化其它Bean对象。）")])]),t._v(" "),a("h2",{attrs:{id:"bean的生命周期🐧"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bean的生命周期🐧"}},[t._v("#")]),t._v(" Bean的生命周期🐧")]),t._v(" "),a("p",[t._v("Spring其实就是一个管理Bean对象的工厂。它负责对象的创建，对象的销毁等。")]),t._v(" "),a("p",[t._v("所谓的生命周期就是：对象从创建开始到最终销毁的整个过程。其实生命周期的本质是：在哪个时间节点上调用了哪个类的哪个方法。我们需要充分的了解在这个生命线上，都有哪些特殊的时间节点。只有我们知道了特殊的时间节点都在哪，到时我们才可以确定代码写到哪。我们可能需要在某个特殊的时间点上执行一段特定的代码，这段代码就可以放到这个节点上。当生命线走到这里的时候，自然会被调用。")]),t._v(" "),a("h3",{attrs:{id:"生命周期划分"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#生命周期划分"}},[t._v("#")]),t._v(" 生命周期划分")]),t._v(" "),a("p",[a("strong",[t._v("Bean的生命周期之5步")]),t._v("：粗略划分")]),t._v(" "),a("blockquote",[a("p",[t._v("Bean生命周期的管理，可以参考Spring的源码："),a("strong",[t._v("AbstractAutowireCapableBeanFactory类的doCreateBean()方法。")])])]),t._v(" "),a("ul",[a("li",[t._v("第一步：实例化Bean：调用无参构造")]),t._v(" "),a("li",[t._v("第二步：Bean属性赋值：调用set方法")]),t._v(" "),a("li",[t._v("第三步：初始化Bean：调用init方法，需要配置init-method。")]),t._v(" "),a("li",[t._v("第四步：使用Bean。")]),t._v(" "),a("li",[t._v("第五步：销毁Bean：会调用destroy方法，需要配置destroy-method。需要手动关闭Spring容器.")])]),t._v(" "),a("p",[a("strong",[t._v("Bean的生命周期之七步")]),t._v("：添加了Bean后处理器"),a("code",[t._v("BeanPostProcessor")]),t._v("，在bean初始化前后。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("第一步：实例化Bean：调用无参构造")])]),t._v(" "),a("li",[a("p",[t._v("第二步：Bean属性赋值：调用set方法")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("第三步")]),t._v("：执行Bean后处理器的before方法")])]),t._v(" "),a("li",[a("p",[t._v("第四步：初始化Bean：调用init方法，需要配置init-method。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("第五步")]),t._v("：执行Bean后处理器的after方法")])]),t._v(" "),a("li",[a("p",[t._v("第六步：使用Bean。")])]),t._v(" "),a("li",[a("p",[t._v("第七步：销毁Bean：会调用destroy方法，需要配置destroy-method。需要手动关闭Spring容器.")])])]),t._v(" "),a("blockquote",[a("p",[t._v("Bean后处理器作用于当前配置文件中所有的bean。")])]),t._v(" "),a("p",[a("strong",[t._v("Bean的生命周期之十步")]),t._v(": 在点位检查接口，实现则调用相关方法。")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("第一步：实例化Bean：调用无参构造")])]),t._v(" "),a("li",[a("p",[t._v("第二步：Bean属性赋值：调用set方法")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("第三步")]),t._v("："),a("strong",[t._v("检查Bean是否实现了Aware相关接口，设置相关依赖。")])])]),t._v(" "),a("li",[a("p",[t._v("第四步：执行Bean后处理器的before方法")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("第五步")]),t._v("："),a("strong",[t._v("检查Bean是否实现了InitialzingBean接口，调用接口方法。")])])]),t._v(" "),a("li",[a("p",[t._v("第六步：初始化Bean：调用init方法，需要配置init-method。")])]),t._v(" "),a("li",[a("p",[t._v("第七步：执行Bean后处理器的after方法")])]),t._v(" "),a("li",[a("p",[t._v("第八步：使用Bean。")])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("第九步")]),t._v("："),a("strong",[t._v("检查bean是否实现了DisposableBean接口，调用其接口方法。")])])]),t._v(" "),a("li",[a("p",[t._v("第十步：销毁Bean：会调用destroy方法，需要配置destroy-method。需要手动关闭Spring容器.")])])]),t._v(" "),a("p",[a("strong",[t._v("Aware相关的接口包括")]),t._v("：BeanNameAware、BeanClassLoaderAware、BeanFactoryAware")]),t._v(" "),a("ul",[a("li",[t._v("当Bean实现了BeanNameAware，Spring会将Bean的名字传递给Bean。")]),t._v(" "),a("li",[t._v("当Bean实现了BeanClassLoaderAware，Spring会将加载该Bean的类加载器传递给Bean。")]),t._v(" "),a("li",[t._v("当Bean实现了BeanFactoryAware，Spring会将Bean工厂对象传递给Bean。")])]),t._v(" "),a("p",[a("strong",[t._v("以上10步，可以让类实现5个接口，并实现所有方法：")])]),t._v(" "),a("ul",[a("li",[t._v("BeanNameAware")]),t._v(" "),a("li",[t._v("BeanClassLoaderAware")]),t._v(" "),a("li",[t._v("BeanFactoryAware")]),t._v(" "),a("li",[t._v("InitializingBean")]),t._v(" "),a("li",[t._v("DisposableBean")])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("InitializingBean的方法早于init-method的执行。")])]),t._v(" "),a("p",[a("strong",[t._v("DisposableBean的方法早于destroy-method的执行。")])])]),t._v(" "),a("p",[t._v("对于SpringBean的生命周期，掌握之前的7步即可。够用。")]),t._v(" "),a("h3",{attrs:{id:"管理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#管理"}},[t._v("#")]),t._v(" 管理")]),t._v(" "),a("p",[t._v("Spring容器只对单例bean进行完整的生命周期管理。")]),t._v(" "),a("p",[t._v("如果是prototype作用域的Bean，Spring容器只负责将该Bean初始化完毕。等客户端一旦获取到该Bean之后，Spring容器就不再管理该对象的生命周期了。只负责前8步。")]),t._v(" "),a("p",[a("strong",[t._v("new的对象半路交给Spring管理")]),t._v("："),a("code",[t._v("DefaultListableBeanFactory")])]),t._v(" "),a("h2",{attrs:{id:"bean循环依赖问题"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#bean循环依赖问题"}},[t._v("#")]),t._v(" Bean循环依赖问题")]),t._v(" "),a("p",[t._v("A对象中有B属性。B对象中有A属性。这就是循环依赖。我依赖你，你也依赖我。")]),t._v(" "),a("p",[a("strong",[t._v("singleton + set注入")]),t._v("：不会出现循环依赖问题，主要原因是Spring对Bean的管理主要分为清晰的俩个阶段：")]),t._v(" "),a("ol",[a("li",[a("p",[t._v("在Spring容器加载时实例化Bean，主要其中一个Bean实例化后就马上进行曝光。不等属性赋值。")])]),t._v(" "),a("li",[a("p",[t._v("bean曝光之后，再进行属性赋值。")])])]),t._v(" "),a("blockquote",[a("p",[t._v("只有singleton 才会提前曝光。")])]),t._v(" "),a("p",[a("strong",[t._v("prototype+set注入")]),t._v("：如果俩个都prototype对象，则会一直创建新对象，无法停下来，会产生循环依赖问题，出现"),a("code",[t._v("BeanCurrentlyInCreationException")]),t._v("异常。如果其中一个是单例则可以，不会出现循环依赖问题。")]),t._v(" "),a("p",[t._v("**singleton+构造器注入：**会出现循环依赖问题，主要原因是因为通过构造方法注入导致的：因为构造方法注入会导致。实例化对象的过程和对象属性赋值的过程没有分离开，必须在一起完成导致的。")]),t._v(" "),a("h3",{attrs:{id:"解决循环依赖"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#解决循环依赖"}},[t._v("#")]),t._v(" "),a("strong",[t._v("解决循环依赖")])]),t._v(" "),a("p",[t._v("Spring为什么可以解决set + singleton模式下循环依赖？")]),t._v(" "),a("p",[t._v("根本的原因在于：这种方式可以做到将“实例化Bean”和“给Bean属性赋值”这两个动作分开去完成。")]),t._v(" "),a("p",[t._v("实例化Bean的时候：调用无参数构造方法来完成。"),a("strong",[t._v("此时可以先不给属性赋值，可以提前将该Bean对象“曝光”给外界。")])]),t._v(" "),a("p",[t._v("给Bean属性赋值的时候：调用setter方法来完成。")]),t._v(" "),a("p",[a("strong",[t._v("两个步骤是完全可以分离开去完成的，并且这两步不要求在同一个时间点上完成。")])]),t._v(" "),a("p",[t._v("也就是说，Bean都是单例的，我们可以先把所有的单例Bean实例化出来，放到一个集合当中（我们可以称之为缓存），所有的单例Bean全部实例化完成之后，以后我们再慢慢的调用setter方法给属性赋值。这样就解决了循环依赖的问题。")]),t._v(" "),a("p",[a("strong",[t._v("总结")]),t._v("：")]),t._v(" "),a("p",[t._v("Spring只能解决setter方法注入的单例bean之间的循环依赖。ClassA依赖ClassB，ClassB又依赖ClassA，形成依赖闭环。Spring在创建ClassA对象后，不需要等给属性赋值，直接将其曝光到bean缓存当中。在解析ClassA的属性时，又发现依赖于ClassB，再次去获取ClassB，当解析ClassB的属性时，又发现需要ClassA的属性，但此时的ClassA已经被提前曝光加入了正在创建的bean的缓存中，则无需创建新的的ClassA的实例，直接从缓存中获取即可。从而解决循环依赖问题。")]),t._v(" "),a("h2",{attrs:{id:"反射机制"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#反射机制"}},[t._v("#")]),t._v(" 反射机制")]),t._v(" "),a("p",[a("strong",[t._v("简介")]),t._v(":调用一个方法，一般涉及到4个要素：调用那个对象的那个方法，传入什么参数、返回什么值。即使是使用反射调用方法同样也具备四要素。")]),t._v(" "),a("p",[a("strong",[t._v("需求")]),t._v("：")]),t._v(" "),a("ol",[a("li",[t._v("知道全类名")]),t._v(" "),a("li",[t._v("该类符合javabean规范，属性私有化，提供对外setter和getter方法")]),t._v(" "),a("li",[t._v("其中一个属性名为age，类型为 int")])]),t._v(" "),a("p",[t._v("请使用反射机制调用set方法，给该对象的age属性赋值。")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("UserTest")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 已知类名")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" className "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.powernode.reflect.User"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 已知属性名")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" propertyName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"age"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过反射机制给User对象的age属性赋值20岁")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" clazz "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("className"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" obj "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" clazz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("newInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建对象")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 根据属性名获取setter方法名")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" setMethodName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"set"')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" propertyName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("toUpperCase")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("charAt")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" propertyName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("substring")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("1")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 获取Method")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Method")]),t._v(" setMethod "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" clazz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDeclaredMethod")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("setMethodName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("int")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用Method")]),t._v("\n        setMethod"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("invoke")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("20")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("obj"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br")])]),a("h2",{attrs:{id:"手写spring框架ioc"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#手写spring框架ioc"}},[t._v("#")]),t._v(" 手写Spring框架Ioc")]),t._v(" "),a("p",[t._v("Spring的IoC容器 的实现原理：工厂模式+解析XML+反射机制")]),t._v(" "),a("p",[a("strong",[t._v("简单模式")]),t._v("：")]),t._v(" "),a("h2",{attrs:{id:"ioc注解开发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#ioc注解开发"}},[t._v("#")]),t._v(" Ioc注解开发")]),t._v(" "),a("h3",{attrs:{id:"注解回顾"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注解回顾"}},[t._v("#")]),t._v(" 注解回顾")]),t._v(" "),a("p",[a("strong",[t._v("自定义注解")]),t._v("：")]),t._v(" "),a("p",[a("strong",[t._v("反射读取注解")]),t._v("：")]),t._v(" "),a("p",[a("strong",[t._v("需求")]),t._v("：只知道包名：com.axcmsm.bean，扫描该包下获取所有的类，如果有注解就实例化，然后放入Map集合中。")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Test")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 存放Bean的Map集合。key存储beanId。value存储Bean。")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Map")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" beanMap "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("HashMap")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" packageName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.axcmsm.bean"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" path "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" packageName"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("replaceAll")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\\\."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"/"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("URL")]),t._v(" url "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ClassLoader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSystemClassLoader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getResource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("path"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),t._v(" file "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("url"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getPath")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("File")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" files "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" file"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("listFiles")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Arrays")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("stream")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("files"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forEach")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("f "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("->")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" className "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" packageName "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"."')]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v(" f"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("split")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"\\\\."')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token number"}},[t._v("0")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),a("span",{pre:!0,attrs:{class:"token generics"}},[a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("<")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("?")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(">")])]),t._v(" clazz "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("forName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("className"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("if")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("clazz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("isAnnotationPresent")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Component")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Component")]),t._v(" component "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" clazz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getAnnotation")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Component")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),t._v(" beanId "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" component"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("value")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" bean "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" clazz"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("newInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                    beanMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("put")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanId"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" bean"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n                "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Exception")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n                e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("printStackTrace")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("beanMap"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br")])]),a("h3",{attrs:{id:"声明式bean注解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#声明式bean注解"}},[t._v("#")]),t._v(" 声明式Bean注解")]),t._v(" "),a("p",[t._v("负责声明Bean的注解，常见的包括四个：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("@Component")])]),t._v(" "),a("li",[t._v("@Controller：控制器类上使用")]),t._v(" "),a("li",[t._v("@Service：业务层类上使用")]),t._v(" "),a("li",[t._v("@Repository：持久层类上使用")])]),t._v(" "),a("blockquote",[a("p",[t._v("后面三个其实是Component的别名，是为了增加可读性的。")])]),t._v(" "),a("p",[a("strong",[t._v("基本使用")]),t._v(" ：")]),t._v(" "),a("p",[a("strong",[t._v("如何排除bean")]),t._v("：(了解)")]),t._v(" "),a("p",[t._v('use-default-filters="true" 表示：使用spring默认的规则，只要有Component、Controller、Service、Repository中的任意一个注解标注，则进行实例化。')]),t._v(" "),a("p",[a("strong",[t._v('use-default-filters="false"')]),t._v(" 表示：不再spring默认实例化规则，即使有Component、Controller、Service、Repository这些注解标注，也不再实例化。")]),t._v(" "),a("p",[t._v("也可以将use-default-filters设置为true（不写就是true），并且采用exclude-filter方式排出哪些注解标注的Bean不参与实例化。")]),t._v(" "),a("h3",{attrs:{id:"注入的注解"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#注入的注解"}},[t._v("#")]),t._v(" "),a("strong",[t._v("注入的注解")])]),t._v(" "),a("p",[t._v("@Component @Controller @Service @Repository 这四个注解是用来声明Bean的，声明后这些Bean将被实例化。接下来我们看一下，如何给Bean的属性赋值。给Bean属性赋值需要用到这些注解：")]),t._v(" "),a("p",[a("strong",[t._v("@Value")]),t._v("：简单类型，可以出现在属性上、setter方法上、以及构造方法的形参上。可见Spring给我们提供了多样化的注入。")]),t._v(" "),a("p",[a("strong",[t._v("@Autowired与@Qualifier")]),t._v("："),a("strong",[t._v("非简单类型")]),t._v("。"),a("strong",[t._v("自动装配，默认根据类型装配")]),t._v("。【默认是byType】。")]),t._v(" "),a("blockquote",[a("p",[t._v("构造方法|方法|形参|属性|注解。")]),t._v(" "),a("p",[t._v("该注解有一个required属性，默认值是true，表示在注入的时候要求被注入的Bean必须是存在的，如果不存在则报错。如果required属性设置为false，表示注入的Bean存在或者不存在都没关系，存在的话就注入，不存在的话，也不报错。注解和@Qualifier注解联合起来才可以根据名称进行装配，@Autowired在@Qualifier注解中指定Bean名称。")])]),t._v(" "),a("p",[a("strong",[t._v("总结")]),t._v("：")]),t._v(" "),a("p",[t._v("@Autowired注解可以出现在：属性上、构造方法上、构造方法的参数上、setter方法上。")]),t._v(" "),a("p",[t._v("当带参数的构造方法只有一个，@Autowired注解可以省略。")]),t._v(" "),a("p",[t._v("@Autowired注解默认根据类型注入。如果要根据名称注入的话，需要配合@Qualifier注解一起使用。")]),t._v(" "),a("p",[a("strong",[t._v("@Resource")]),t._v("：@Resource注解是JDK扩展包中的，也就是说属于JDK的一部分。所以该注解是标准注解，更加具有通用性。也可以完成非简单类型注入。")]),t._v(" "),a("blockquote",[a("p",[t._v("@Resource和@Autowired注解有什么区别？")]),t._v(" "),a("ul",[a("li",[t._v("@Autowired注解是Spring框架自己的。")]),t._v(" "),a("li",[a("strong",[t._v("@Resource注解默认根据名称装配byName，未指定name时，使用属性名作为name。通过name找不到的话会自动启动通过类型byType装配。")])]),t._v(" "),a("li",[a("strong",[t._v("@Autowired注解默认根据类型装配byType，如果想根据名称装配，需要配合@Qualifier注解一起用。")])]),t._v(" "),a("li",[t._v("@Resource注解用在属性上、setter方法上。")]),t._v(" "),a("li",[t._v("@Autowired注解用在属性上、setter方法上、构造方法上、构造方法参数上。")])])]),t._v(" "),a("p",[t._v("@Resource注解属于JDK扩展包，所以不在JDK当中，需要额外引入以下依赖：【"),a("strong",[t._v("如果是JDK8的话不需要额外引入依赖。高于JDK11或低于JDK8需要引入以下依赖。")]),t._v("】")]),t._v(" "),a("p",[t._v("一定要注意："),a("strong",[t._v("如果你用Spring6，要知道Spring6不再支持JavaEE，它支持的是JakartaEE9。（Oracle把JavaEE贡献给Apache了，Apache把JavaEE的名字改成JakartaEE了，大家之前所接触的所有的  javax.*  包名统一修改为  jakarta.*包名了。）")])]),t._v(" "),a("h3",{attrs:{id:"全注解式开发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全注解式开发"}},[t._v("#")]),t._v(" 全注解式开发")]),t._v(" "),a("p",[t._v("所谓的全注解开发就是不再使用spring配置文件了。写一个配置类来代替配置文件。")]),t._v(" "),a("ul",[a("li",[t._v("@Configuration：配置类")]),t._v(" "),a("li",[t._v('@ComponentScan({"com.powernode.spring6"})：扫描包')])]),t._v(" "),a("p",[a("strong",[t._v("实现")]),t._v("："),a("code",[t._v("AnnotationConfigApplicationContext")])]),t._v(" "),a("h2",{attrs:{id:"jdbctemplate"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#jdbctemplate"}},[t._v("#")]),t._v(" JdbcTemplate")]),t._v(" "),a("p",[t._v("JdbcTemplate是Spring提供的一个JDBC模板类，是对JDBC的封装，简化JDBC代码。")]),t._v(" "),a("p",[t._v("当然，也可以不用，可以让Spring集成其它的ORM框架，例如：MyBatis、Hibernate等。")]),t._v(" "),a("h2",{attrs:{id:"gof之代理模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#gof之代理模式"}},[t._v("#")]),t._v(" GoF之代理模式")]),t._v(" "),a("p",[a("strong",[t._v("AoP的底层就是使用代理模式实现的")]),t._v("。代理模式是GoF23种设计模式之一，属于结构型设计模式。")]),t._v(" "),a("p",[a("strong",[t._v("作用")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("对象需要受到保护时，可以考虑代理对象完成某个行为。")]),t._v(" "),a("li",[t._v("需要某个对象功能进行增强的时候，可以考虑找一个代理进行增强。")]),t._v(" "),a("li",[t._v("A对象无法和B对象直接交互时，也可以使用代理模块解决。")])]),t._v(" "),a("p",[t._v("代理模式的作用是：为其他对象提供一种代理以控制对这个对象的访问。在某些情况下，一个客户不想或者不能直接引用一个对象，此时可以通过一个称之为“代理”的第三者来实现间接引用。代理对象可以在客户端和目标对象之间起到中介的作用，并且可以通过代理对象去掉客户不应该看到的内容和服务或者添加客户需要的额外服务。 通过引入一个新的对象来实现对真实对象的操作或者将新的对象作为真实对象的一个替身，这种实现机制即为代理模式，通过引入代理对象来间接访问一个对象，这就是代理模式的模式动机。")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("对于客户端程序来说，使用代理对象时就像在使用目标对象一样。")])])]),t._v(" "),a("p",[a("strong",[t._v("代理模式中的角色")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("代理类（代理主题）")]),t._v(" "),a("li",[t._v("目标类（真实主题）")]),t._v(" "),a("li",[t._v("代理类和目标类的公共接口（抽象主题）：客户端在使用代理类时就像在使用目标类，不被客户端所察觉，所以代理类和目标类要有共同的行为，也就是实现共同的接口。")])]),t._v(" "),a("p",[t._v("代理模式在代码实现上，包括两种形式：")]),t._v(" "),a("ul",[a("li",[t._v("静态代理")]),t._v(" "),a("li",[t._v("动态代理")])]),t._v(" "),a("h3",{attrs:{id:"静态代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#静态代理"}},[t._v("#")]),t._v(" 静态代理")]),t._v(" "),a("p",[t._v("**实现：**实现公共接口，has is，将目标对象作为属性传入，然后进行方法增强后再进行调用。")]),t._v(" "),a("p",[a("strong",[t._v("缺点")]),t._v("：类爆炸，每个接口都需要对应的代理类，类会基剧膨胀，不好维护。")]),t._v(" "),a("h3",{attrs:{id:"动态代理"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#动态代理"}},[t._v("#")]),t._v(" 动态代理")]),t._v(" "),a("p",[t._v("在添加了字节码生成技术，可以在内存中为我们生成一个class字节码文件，这个字节码文件就是代理类。的是为了减少代理类的数量。解决代码复用的问题。")]),t._v(" "),a("p",[t._v("在内存中动态生成字节码代理类的技术，叫做：动态代理。")]),t._v(" "),a("p",[a("strong",[t._v("在内存当中动态生成类的技术常见的包括")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("JDK动态代理技术：只能代理接口。")]),t._v(" "),a("li",[t._v("CGLIB动态代理技术：CGLIB(Code Generation Library)是一个开源项目。是一个强大的，高性能，高质量的Code生成类库，它可以在运行期扩展Java类与实现Java接口。它既可以代理接口，又可以代理类，"),a("strong",[t._v("底层是通过继承的方式实现的")]),t._v("。性能比JDK动态代理要好。"),a("strong",[t._v("（底层有一个小而快的字节码处理框架ASM。）")])]),t._v(" "),a("li",[t._v('Javassist动态代理技术：Javassist是一个开源的分析、编辑和创建Java字节码的类库。是由东京工业大学的数学和计算机科学系的 Shigeru Chiba （千叶 滋）所创建的。它已加入了开放源代码JBoss 应用服务器项目，通过使用Javassist对字节码操作为JBoss实现动态"AOP"框架。')])]),t._v(" "),a("p",[a("strong",[t._v("JDK动态代理实现")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Client")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第一步：创建目标对象")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OrderService")]),t._v(" target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OrderServiceImpl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第二步：创建代理对象")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OrderService")]),t._v(" orderServiceProxy "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Proxy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("newProxyInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClassLoader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInterfaces")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" 调用处理器对象"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 第三步：调用代理对象的代理方法")]),t._v("\n        orderServiceProxy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("detail")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        orderServiceProxy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("modify")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        orderServiceProxy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("generate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("p",[a("strong",[t._v("newProxyInstance")]),t._v(":新建代理对象")]),t._v(" "),a("ul",[a("li",[t._v("第一件事：在内存中生成了代理类的字节码")]),t._v(" "),a("li",[t._v("第二件事：创建代理对象")])]),t._v(" "),a("p",[a("strong",[t._v("其中newProxyInstance()方法有三个参数")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("第一个参数：类加载器。在内存中生成了字节码，要想执行这个字节码，也是需要先把这个字节码加载到内存当中的。所以要指定使用哪个类加载器加载。")]),t._v(" "),a("li",[t._v("第二个参数：接口类型。代理类和目标类实现相同的接口，所以要通过这个参数告诉JDK动态代理生成的类要实现哪些接口。")]),t._v(" "),a("li",[t._v("第三个参数：调用处理器。这是一个JDK动态代理规定的接口，接口全名：java.lang.reflect.InvocationHandler。显然这是一个回调接口，也就是说调用这个接口中方法的程序已经写好了，就差这个接口的实现类了。")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimerInvocationHandler")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("implements")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("InvocationHandler")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 目标对象")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("private")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 通过构造方法来传目标对象")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimerInvocationHandler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("this")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Override")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("invoke")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" proxy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Method")]),t._v(" method"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("throws")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Throwable")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 目标执行之前增强。")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" begin "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentTimeMillis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用目标对象的目标方法")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" retValue "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" method"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("invoke")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 目标执行之后增强。")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("long")]),t._v(" end "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("currentTimeMillis")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"耗时"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("end "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("-")]),t._v(" begin"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"毫秒"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 一定要记得返回哦。")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" retValue"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br")])]),a("p",[t._v("InvocationHandler接口中有一个方法invoke，这个invoke方法上有三个参数：")]),t._v(" "),a("ul",[a("li",[t._v("第一个参数：Object proxy。代理对象。设计这个参数只是为了后期的方便，如果想在invoke方法中使用代理对象的话，尽管通过这个参数来使用。")]),t._v(" "),a("li",[t._v("第二个参数：Method method。目标方法。")]),t._v(" "),a("li",[t._v("第三个参数：Object[] args。目标方法调用时要传的参数。")])]),t._v(" "),a("blockquote",[a("p",[t._v("我们可以给TimerInvocationHandler提供一个构造方法，可以通过这个构造方法传过来“目标对象”")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Client")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建目标对象")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OrderService")]),t._v(" target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OrderServiceImpl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建代理对象")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OrderService")]),t._v(" orderServiceProxy "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OrderService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Proxy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("newProxyInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClassLoader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInterfaces")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimerInvocationHandler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用代理对象的代理方法")]),t._v("\n        orderServiceProxy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("detail")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        orderServiceProxy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("modify")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        orderServiceProxy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("generate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("blockquote",[a("p",[t._v("我们可以看到，不管你有多少个Service接口，多少个业务类，这个TimerInvocationHandler接口是不是只需要写一次就行了，代码是不是得到复用了！！！！")]),t._v(" "),a("p",[t._v("而且最重要的是，以后程序员只需要关注核心业务的编写了，像这种统计时间的代码根本不需要关注。因为这种统计时间的代码只需要在调用处理器中编写一次即可。")])]),t._v(" "),a("p",[a("strong",[t._v("封装")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProxyUtil")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("newProxyInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Object")]),t._v(" target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Proxy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("newProxyInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClassLoader")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n                target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getClass")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getInterfaces")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(",")]),t._v(" \n                "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TimerInvocationHandler")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br")])]),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Client")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("static")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("main")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("String")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" args"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建目标对象")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OrderService")]),t._v(" target "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OrderServiceImpl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 创建代理对象")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OrderService")]),t._v(" orderServiceProxy "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("OrderService")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProxyUtil")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("newProxyInstance")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("target"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 调用代理对象的代理方法")]),t._v("\n        orderServiceProxy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("detail")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        orderServiceProxy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("modify")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        orderServiceProxy"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("generate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br")])]),a("p",[a("strong",[t._v("CGLIB动态代理")]),t._v(":CGLIB既可以代理接口，又可以代理类。底层采用继承的方式实现。所以被代理的目标类不能使用final修饰。")]),t._v(" "),a("h2",{attrs:{id:"面向切面编程aop"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#面向切面编程aop"}},[t._v("#")]),t._v(" 面向切面编程AOP")]),t._v(" "),a("p",[t._v("IoC使软件组件松耦合。AOP让你能够捕捉系统中经常使用的功能，把它转化成组件。")]),t._v(" "),a("p",[t._v("AOP（Aspect Oriented Programming）：面向切面编程，面向方面编程。（AOP是一种编程技术）是对OOP的补充延伸。")]),t._v(" "),a("blockquote",[a("p",[t._v("切面：非业务逻辑的通用性代码。将其提取出来。看做一个横向的切面，将业务代码看做为纵向的切面。以横向的方式应用到业务当中，这种方式成为切面编程。")]),t._v(" "),a("p",[t._v("例如是事务：开启事务，提交事务，回滚事务。这些都交叉业务。")])]),t._v(" "),a("p",[t._v("AOP底层使用的就是动态代理来实现的。")]),t._v(" "),a("p",[t._v("Spring的AOP使用的动态代理是：JDK动态代理 + CGLIB动态代理技术。Spring在这两种动态代理中灵活切换，如果是代理接口，会默认使用JDK动态代理，如果要代理某个类，这个类没有实现接口，就会切换使用CGLIB。当然，你也可以强制通过一些配置让Spring只使用CGLIB。")]),t._v(" "),a("p",[a("strong",[t._v("简介")]),t._v("：")]),t._v(" "),a("p",[t._v("用一句话总结AOP：将与核心业务无关的代码独立的抽取出来，形成一个独立的组件，然后以横向交叉的方式应用到业务流程当中的过程被称为AOP。")]),t._v(" "),a("blockquote",[a("p",[t._v("一般一个系统当中都会有一些系统服务，例如：日志、事务管理、安全等。这些系统服务被称为："),a("strong",[t._v("交叉业务")])])]),t._v(" "),a("p",[a("strong",[t._v("AOP的优点：")])]),t._v(" "),a("ul",[a("li",[t._v("第一：代码复用性增强。")]),t._v(" "),a("li",[t._v("第二：代码易维护。")]),t._v(" "),a("li",[t._v("第三：使开发者更关注业务逻辑。")])]),t._v(" "),a("h3",{attrs:{id:"术语"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#术语"}},[t._v("#")]),t._v(" "),a("strong",[t._v("术语")])]),t._v(" "),a("ul",[a("li",[a("p",[a("strong",[t._v("连接点 Joinpoint")]),t._v("："),a("strong",[t._v("位置")])])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("在程序的整个执行流程中，"),a("strong",[t._v("可以织入")]),t._v("切面的位置。方法的执行前后，异常抛出之后等位置。")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("切点 Pointcut")]),t._v("："),a("strong",[t._v("方法")])])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("在程序执行流程中，"),a("strong",[t._v("真正织入")]),t._v("切面的方法。（一个切点对应多个连接点）")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("通知 Advice")]),t._v("："),a("strong",[t._v("具体增强的代码")])])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("通知又叫增强，就是具体你要织入的代码。")]),t._v(" "),a("li",[t._v("通知包括：")])])]),t._v(" "),a("li",[a("ul",[a("li",[a("ul",[a("li",[t._v("前置通知")]),t._v(" "),a("li",[t._v("后置通知")]),t._v(" "),a("li",[t._v("环绕通知")]),t._v(" "),a("li",[t._v("异常通知")]),t._v(" "),a("li",[t._v("最终通知")])])])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("切面 Aspect")]),t._v("："),a("strong",[t._v("切点+通知")]),t._v("，"),a("strong",[t._v("概念")])])]),t._v(" "),a("li",[a("ul",[a("li",[a("strong",[t._v("切点 + 通知就是切面。")])])])]),t._v(" "),a("li",[a("p",[t._v("织入 Weaving：")])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("把通知应用到目标对象上的过程。")])])]),t._v(" "),a("li",[a("p",[t._v("代理对象 Proxy")])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("一个目标对象被织入通知后产生的新对象。")])])]),t._v(" "),a("li",[a("p",[t._v("目标对象 Target")])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("被织入通知的对象")])])])]),t._v(" "),a("h3",{attrs:{id:"切点表达式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#切点表达式"}},[t._v("#")]),t._v(" 切点表达式")]),t._v(" "),a("p",[t._v("切点表达式用来定义通知（Advice）往哪些方法上切入。")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token function"}},[t._v("execution")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("访问控制权限修饰符"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v(" 返回值类型 "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("全限定类名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),t._v("方法名"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("形式参数列表"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("[")]),t._v("异常"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("]")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br")])]),a("p",[t._v("访问控制权限修饰符：")]),t._v(" "),a("ul",[a("li",[t._v("可选项。")]),t._v(" "),a("li",[t._v("没写，就是4个权限都包括。")]),t._v(" "),a("li",[t._v("写public就表示只包括公开的方法。")])]),t._v(" "),a("p",[t._v("返回值类型：")]),t._v(" "),a("ul",[a("li",[t._v("必填项。")]),t._v(" "),a("li",[t._v("* 表示返回值类型任意。")])]),t._v(" "),a("p",[t._v("全限定类名：")]),t._v(" "),a("ul",[a("li",[t._v("可选项。")]),t._v(" "),a("li",[t._v("两个点“..”代表当前包以及子包下的所有类。")]),t._v(" "),a("li",[t._v("省略时表示所有的类。")])]),t._v(" "),a("p",[t._v("方法名：")]),t._v(" "),a("ul",[a("li",[t._v("必填项。")]),t._v(" "),a("li",[t._v("*表示所有方法。")]),t._v(" "),a("li",[t._v("set*表示所有的set方法。")])]),t._v(" "),a("p",[t._v("形式参数列表：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("必填项")])]),t._v(" "),a("li",[a("p",[t._v("() 表示没有参数的方法")])]),t._v(" "),a("li",[a("p",[t._v("(..) 参数类型和个数随意的方法")])]),t._v(" "),a("li",[a("p",[t._v("(*) 只有一个参数的方法")])]),t._v(" "),a("li",[a("p",[t._v("(*, String) 第一个参数类型随意，第二个参数是String的。")])])]),t._v(" "),a("p",[t._v("异常：")]),t._v(" "),a("ul",[a("li",[t._v("可选项。")]),t._v(" "),a("li",[t._v("省略时表示任意异常类型。")])]),t._v(" "),a("p",[a("strong",[t._v("案例")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//service包下所有的类中以delete开始的所有方法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("execution")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("powernode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mall"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("service"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("*"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("delete"),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//mall包下所有的类的所有的方法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("execution")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" com"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("powernode"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("mall"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("*"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("//所有类的所有方法")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("execution")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("*")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br")])]),a("h3",{attrs:{id:"使用"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#使用"}},[t._v("#")]),t._v(" 使用")]),t._v(" "),a("p",[t._v("Spring对AOP的实现包括以下3种方式：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("第一种方式：Spring框架结合AspectJ框架实现的AOP，基于注解方式。")])]),t._v(" "),a("li",[a("strong",[t._v("第二种方式：Spring框架结合AspectJ框架实现的AOP，基于XML方式。")])]),t._v(" "),a("li",[t._v("第三种方式：Spring框架自己实现的AOP，基于XML配置方式。")])]),t._v(" "),a("p",[t._v("实际开发中，都是Spring+AspectJ来实现AOP。所以我们重点学习第一种和第二种方式。")]),t._v(" "),a("p",[t._v("什么是AspectJ？（Eclipse组织的一个支持AOP的框架。AspectJ框架是独立于Spring框架之外的一个框架，Spring框架用了AspectJ）")]),t._v(" "),a("p",[a("strong",[t._v("通知类型包括")]),t._v("：")]),t._v(" "),a("ul",[a("li",[t._v("前置通知：@Before 目标方法执行之前的通知")]),t._v(" "),a("li",[t._v("后置通知：@AfterReturning 目标方法执行之后的通知")]),t._v(" "),a("li",[t._v("环绕通知：@Around 目标方法之前添加通知，同时目标方法执行之后添加通知。")]),t._v(" "),a("li",[t._v("异常通知：@AfterThrowing 发生异常之后执行的通知")]),t._v(" "),a("li",[t._v("最终通知：@After 放在finally语句块中的通知")])]),t._v(" "),a("p",[a("strong",[t._v("全注解式开发AOP")]),t._v("：")]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Configuration")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ComponentScan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.powernode.spring6.service"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@EnableAspectJAutoProxy")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("proxyTargetClass "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token boolean"}},[t._v("true")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Spring6Configuration")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br")])]),a("p",[a("strong",[t._v("AOP的实际案例：事务处理")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Aspect")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Component")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("TransactionAspect")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n    \n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Around")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"execution(* com.powernode.spring6.biz..*(..))"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("aroundAdvice")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("ProceedingJoinPoint")]),t._v(" proceedingJoinPoint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("try")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"开启事务"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token comment"}},[t._v("// 执行目标")]),t._v("\n            proceedingJoinPoint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("proceed")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"提交事务"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("catch")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Throwable")]),t._v(" e"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n            "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"回滚事务"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br")])]),a("p",[a("strong",[t._v("AOP的实际案例：安全日志")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Component")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Aspect")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("SecurityAspect")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Pointcut")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"execution(* com.powernode.spring6.biz..save*(..))"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("savePointcut")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Pointcut")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"execution(* com.powernode.spring6.biz..delete*(..))"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("deletePointcut")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Pointcut")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"execution(* com.powernode.spring6.biz..modify*(..))"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("modifyPointcut")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Before")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"savePointcut() || deletePointcut() || modifyPointcut()"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("void")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("beforeAdivce")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JoinPoint")]),t._v(" joinpoint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("System")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),t._v("out"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("println")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"XXX操作员正在操作"')]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),t._v("joinpoint"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getSignature")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("+")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"方法"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br")])]),a("h2",{attrs:{id:"spring对事务的支持"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring对事务的支持"}},[t._v("#")]),t._v(" Spring对事务的支持")]),t._v(" "),a("p",[a("strong",[t._v("概述")]),t._v(":")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("什么是事务")])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("在一个业务流程当中，通常需要多条DML（insert delete update）语句共同联合才能完成，这多条DML语句必须同时成功，或者同时失败，这样才能保证数据的安全。")]),t._v(" "),a("li",[t._v("多条DML要么同时成功，要么同时失败，这叫做事务。")]),t._v(" "),a("li",[t._v("事务：Transaction（tx）")])])]),t._v(" "),a("li",[a("p",[t._v("事务的四个处理过程：")])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("第一步：开启事务 (start transaction)")]),t._v(" "),a("li",[t._v("第二步：执行核心业务代码")]),t._v(" "),a("li",[t._v("第三步：提交事务（如果核心业务处理过程中没有出现异常）(commit transaction)")]),t._v(" "),a("li",[t._v("第四步：回滚事务（如果核心业务处理过程中出现异常）(rollback transaction)")])])]),t._v(" "),a("li",[a("p",[t._v("事务的四个特性：")])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("A 原子性：事务是最小的工作单元，不可再分。")]),t._v(" "),a("li",[t._v("C 一致性：事务要求要么同时成功，要么同时失败。事务前和事务后的总量不变。")]),t._v(" "),a("li",[t._v("I 隔离性：事务和事务之间因为有隔离性，才可以保证互不干扰。")]),t._v(" "),a("li",[t._v("D 持久性：持久性是事务结束的标志。")])])])]),t._v(" "),a("p",[a("strong",[t._v("Spring实现事务的两种方式")]),t._v(":")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("编程式事务")]),t._v(" "),a("ul",[a("li",[t._v("通过编写代码的方式来实现事务的管理。")])])]),t._v(" "),a("li",[a("p",[a("strong",[t._v("声明式事务")])]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("基于注解方式")])]),t._v(" "),a("li",[t._v("基于XML配置方式")])])])]),t._v(" "),a("p",[a("strong",[t._v("Spring事务管理API")]),t._v(":")]),t._v(" "),a("p",[t._v("Spring对事务的管理底层实现方式是基于AOP实现的。采用AOP的方式进行了封装。所以Spring专门针对事务开发了一套API，API的核心接口如下：")]),t._v(" "),a("p",[t._v("PlatformTransactionManager接口："),a("strong",[t._v("spring事务管理器")]),t._v("的核心接口。在"),a("strong",[t._v("Spring6")]),t._v("中它有两个实现：")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("DataSourceTransactionManager")]),t._v("：支持JdbcTemplate、MyBatis、Hibernate等事务管理。")]),t._v(" "),a("li",[t._v("JtaTransactionManager：支持分布式事务管理。")])]),t._v(" "),a("p",[t._v("如果要在Spring6中使用JdbcTemplate，就要使用DataSourceTransactionManager来管理事务。")]),t._v(" "),a("h3",{attrs:{id:"具体实现"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#具体实现"}},[t._v("#")]),t._v(" "),a("strong",[t._v("具体实现")])]),t._v(" "),a("p",[a("strong",[t._v("基于注解方式实现")]),t._v("：")]),t._v(" "),a("p",[a("strong",[t._v("基于XML方式实现")]),t._v("：")]),t._v(" "),a("h3",{attrs:{id:"事务的属性"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#事务的属性"}},[t._v("#")]),t._v(" 事务的属性")]),t._v(" "),a("p",[t._v("事务中的重点属性：")]),t._v(" "),a("ul",[a("li",[t._v("事务传播行为")]),t._v(" "),a("li",[t._v("事务隔离级别")]),t._v(" "),a("li",[t._v("事务超时")]),t._v(" "),a("li",[t._v("只读事务")]),t._v(" "),a("li",[t._v("设置出现哪些异常回滚事务")]),t._v(" "),a("li",[t._v("设置出现哪些异常不回滚事务")])]),t._v(" "),a("p",[a("strong",[t._v("事务传播行为")]),t._v("：在service类中有a()方法和b()方法，a()方法上有事务，b()方法上也有事务，当a()方法执行过程中调用了b()方法，事务是如何传递的？合并到一个事务里？还是开启一个新的事务？这就是事务传播行为。")]),t._v(" "),a("p",[t._v("一共有七种传播行为：")]),t._v(" "),a("ul",[a("li",[t._v("REQUIRED：支持当前事务，如果不存在就新建一个(默认)"),a("strong",[t._v("【没有就新建，有就加入】")])]),t._v(" "),a("li",[t._v("SUPPORTS：支持当前事务，如果当前没有事务，就以非事务方式执行**【有就加入，没有就不管了】**")]),t._v(" "),a("li",[t._v("MANDATORY：必须运行在一个事务中，如果当前没有事务正在发生，将抛出一个异常**【有就加入，没有就抛异常】**")]),t._v(" "),a("li",[t._v("REQUIRES_NEW：开启一个新的事务，如果一个事务已经存在，则将这个存在的事务挂起**【不管有没有，直接开启一个新事务，开启的新事务和之前的事务不存在嵌套关系，之前事务被挂起】**")]),t._v(" "),a("li",[t._v("NOT_SUPPORTED：以非事务方式运行，如果有事务存在，挂起当前事务**【不支持事务，存在就挂起】**")]),t._v(" "),a("li",[t._v("NEVER：以非事务方式运行，如果有事务存在，抛出异常**【不支持事务，存在就抛异常】**")]),t._v(" "),a("li",[t._v("NESTED：如果当前正有一个事务在进行中，则该方法应当运行在一个嵌套式事务中。被嵌套的事务可以独立于外层事务进行提交或回滚。如果外层事务不存在，行为就像REQUIRED一样。"),a("strong",[t._v("【有事务的话，就在这个事务里再嵌套一个完全独立的事务，嵌套的事务可以独立的提交和回滚。没有事务就和****REQUIRED一样。】")])])]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("一定要集成Log4j2日志框架，在日志信息中可以看到更加详细的信息。")])])]),t._v(" "),a("p",[a("strong",[t._v("事务隔离级别")]),t._v(":事务隔离级别类似于教室A和教室B之间的那道墙，隔离级别越高表示墙体越厚。隔音效果越好。")]),t._v(" "),a("p",[t._v("数据库中读取数据存在的三大问题：（三大读问题）")]),t._v(" "),a("ul",[a("li",[a("strong",[t._v("脏读：读取到没有提交到数据库的数据，叫做脏读。")])]),t._v(" "),a("li",[a("strong",[t._v("不可重复读：在同一个事务当中，第一次和第二次读取的数据不一样。")])]),t._v(" "),a("li",[a("strong",[t._v("幻读：读到的数据是假的。")]),t._v("（并发情况)")])]),t._v(" "),a("p",[t._v("事务隔离级别包括四个级别：")]),t._v(" "),a("ul",[a("li",[a("p",[t._v("读未提交：READ_UNCOMMITTED")])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("这种隔离级别，存在"),a("strong",[t._v("脏读")]),t._v("问题，所谓的脏读(dirty read)表示能够读取到其它事务未提交的数据。")])])]),t._v(" "),a("li",[a("p",[t._v("读提交：READ_COMMITTED")])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("解决了脏读问题，其它事务提交之后才能读到，但存在"),a("strong",[t._v("不可重复读")]),t._v("问题。")])])]),t._v(" "),a("li",[a("p",[t._v("可重复读：REPEATABLE_READ")])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("解决了不可重复读，可以达到可重复读效果，只要当前事务不结束，读取到的数据一直都是一样的。但存在幻读问题。")])])]),t._v(" "),a("li",[a("p",[t._v("序列化：SERIALIZABLE")])]),t._v(" "),a("li",[a("ul",[a("li",[t._v("解决了幻读问题，事务排队执行。不支持并发。")])])])]),t._v(" "),a("table",[a("thead",[a("tr",[a("th",[a("strong",[t._v("隔离级别")])]),t._v(" "),a("th",[a("strong",[t._v("脏读")])]),t._v(" "),a("th",[a("strong",[t._v("不可重复读")])]),t._v(" "),a("th",[a("strong",[t._v("幻读")])])])]),t._v(" "),a("tbody",[a("tr",[a("td",[t._v("读未提交")]),t._v(" "),a("td",[a("strong",[t._v("有")])]),t._v(" "),a("td",[a("strong",[t._v("有")])]),t._v(" "),a("td",[a("strong",[t._v("有")])])]),t._v(" "),a("tr",[a("td",[t._v("读提交")]),t._v(" "),a("td",[t._v("无")]),t._v(" "),a("td",[a("strong",[t._v("有")])]),t._v(" "),a("td",[a("strong",[t._v("有")])])]),t._v(" "),a("tr",[a("td",[t._v("可重复读")]),t._v(" "),a("td",[t._v("无")]),t._v(" "),a("td",[t._v("无")]),t._v(" "),a("td",[a("strong",[t._v("有")])])]),t._v(" "),a("tr",[a("td",[t._v("序列化")]),t._v(" "),a("td",[t._v("无")]),t._v(" "),a("td",[t._v("无")]),t._v(" "),a("td",[t._v("无")])])])]),t._v(" "),a("p",[a("strong",[t._v("事务超时")]),t._v(":")]),t._v(" "),a("p",[t._v("表示超过10秒如果该事务中"),a("strong",[t._v("所有的DML语句还没有执行完毕")]),t._v("的话，最终结果会"),a("strong",[t._v("选择回滚")]),t._v("。")]),t._v(" "),a("p",[t._v("默认值-1，表示没有时间限制。")]),t._v(" "),a("blockquote",[a("p",[a("strong",[t._v("在当前事务当中，最后一条DML语句执行之前的时间。如果最后一条DML语句后面很有很多业务逻辑，这些业务代码执行的时间不被计入超时时间。")])]),t._v(" "),a("p",[a("strong",[t._v("当然，如果想让整个方法的所有代码都计入超时时间的话，可以在方法最后一行添加一行无关紧要的DML语句。")])])]),t._v(" "),a("p",[a("strong",[t._v("只读事务")]),t._v(":")]),t._v(" "),a("p",[t._v("将当前事务设置为只读事务，在该事务执行过程中只允许select语句执行，delete insert update均不可执行。")]),t._v(" "),a("p",[t._v("该特性的作用是："),a("strong",[t._v("启动spring的优化策略。提高select语句执行效率。")])]),t._v(" "),a("p",[t._v("如果该事务中确实没有增删改操作，建议设置为只读事务。")]),t._v(" "),a("p",[a("strong",[t._v("设置哪些异常回滚事务")]),t._v(":")]),t._v(" "),a("p",[a("strong",[t._v("设置哪些异常不回滚事务")]),t._v(":")]),t._v(" "),a("h3",{attrs:{id:"全注解开发"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#全注解开发"}},[t._v("#")]),t._v(" "),a("strong",[t._v("全注解开发")])]),t._v(" "),a("div",{staticClass:"language-java line-numbers-mode"},[a("pre",{pre:!0,attrs:{class:"language-java"}},[a("code",[a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Configuration")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@ComponentScan")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.powernode.bank"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@EnableTransactionManagement")]),t._v("\n"),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("class")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("Spring6Config")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataSource")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDataSource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DruidDataSource")]),t._v(" dataSource "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DruidDataSource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        dataSource"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setDriverClassName")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"com.mysql.cj.jdbc.Driver"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        dataSource"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setUrl")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jdbc:mysql://localhost:3306/spring6"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        dataSource"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setUsername")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"root"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        dataSource"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setPassword")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"root"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" dataSource"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("name "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token string"}},[t._v('"jdbcTemplate"')]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JdbcTemplate")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getJdbcTemplate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataSource")]),t._v(" dataSource"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JdbcTemplate")]),t._v(" jdbcTemplate "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("JdbcTemplate")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        jdbcTemplate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setDataSource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dataSource"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" jdbcTemplate"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n    "),a("span",{pre:!0,attrs:{class:"token annotation punctuation"}},[t._v("@Bean")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("public")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataSourceTransactionManager")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("getDataSourceTransactionManager")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataSource")]),t._v(" dataSource"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("{")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataSourceTransactionManager")]),t._v(" dataSourceTransactionManager "),a("span",{pre:!0,attrs:{class:"token operator"}},[t._v("=")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("new")]),t._v(" "),a("span",{pre:!0,attrs:{class:"token class-name"}},[t._v("DataSourceTransactionManager")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        dataSourceTransactionManager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(".")]),a("span",{pre:!0,attrs:{class:"token function"}},[t._v("setDataSource")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("(")]),t._v("dataSource"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(")")]),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n        "),a("span",{pre:!0,attrs:{class:"token keyword"}},[t._v("return")]),t._v(" dataSourceTransactionManager"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v(";")]),t._v("\n    "),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n\n"),a("span",{pre:!0,attrs:{class:"token punctuation"}},[t._v("}")]),t._v("\n")])]),t._v(" "),a("div",{staticClass:"line-numbers-wrapper"},[a("span",{staticClass:"line-number"},[t._v("1")]),a("br"),a("span",{staticClass:"line-number"},[t._v("2")]),a("br"),a("span",{staticClass:"line-number"},[t._v("3")]),a("br"),a("span",{staticClass:"line-number"},[t._v("4")]),a("br"),a("span",{staticClass:"line-number"},[t._v("5")]),a("br"),a("span",{staticClass:"line-number"},[t._v("6")]),a("br"),a("span",{staticClass:"line-number"},[t._v("7")]),a("br"),a("span",{staticClass:"line-number"},[t._v("8")]),a("br"),a("span",{staticClass:"line-number"},[t._v("9")]),a("br"),a("span",{staticClass:"line-number"},[t._v("10")]),a("br"),a("span",{staticClass:"line-number"},[t._v("11")]),a("br"),a("span",{staticClass:"line-number"},[t._v("12")]),a("br"),a("span",{staticClass:"line-number"},[t._v("13")]),a("br"),a("span",{staticClass:"line-number"},[t._v("14")]),a("br"),a("span",{staticClass:"line-number"},[t._v("15")]),a("br"),a("span",{staticClass:"line-number"},[t._v("16")]),a("br"),a("span",{staticClass:"line-number"},[t._v("17")]),a("br"),a("span",{staticClass:"line-number"},[t._v("18")]),a("br"),a("span",{staticClass:"line-number"},[t._v("19")]),a("br"),a("span",{staticClass:"line-number"},[t._v("20")]),a("br"),a("span",{staticClass:"line-number"},[t._v("21")]),a("br"),a("span",{staticClass:"line-number"},[t._v("22")]),a("br"),a("span",{staticClass:"line-number"},[t._v("23")]),a("br"),a("span",{staticClass:"line-number"},[t._v("24")]),a("br"),a("span",{staticClass:"line-number"},[t._v("25")]),a("br"),a("span",{staticClass:"line-number"},[t._v("26")]),a("br"),a("span",{staticClass:"line-number"},[t._v("27")]),a("br"),a("span",{staticClass:"line-number"},[t._v("28")]),a("br"),a("span",{staticClass:"line-number"},[t._v("29")]),a("br"),a("span",{staticClass:"line-number"},[t._v("30")]),a("br")])]),a("h2",{attrs:{id:"spirng整合junit5"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spirng整合junit5"}},[t._v("#")]),t._v(" Spirng整合JUnit5")]),t._v(" "),a("p",[a("strong",[t._v("整合junit4案例")]),t._v("：")]),t._v(" "),a("p",[a("strong",[t._v("整合junit5案例：")])]),t._v(" "),a("h2",{attrs:{id:"集成mybatis"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#集成mybatis"}},[t._v("#")]),t._v(" 集成MyBatis")]),t._v(" "),a("h2",{attrs:{id:"spring八大设计模式"}},[a("a",{staticClass:"header-anchor",attrs:{href:"#spring八大设计模式"}},[t._v("#")]),t._v(" Spring八大设计模式")]),t._v(" "),a("p",[a("strong",[t._v("简单工厂模式")]),t._v("：")]),t._v(" "),a("p",[t._v("BeanFactory的getBean()方法，通过唯一标识来获取Bean对象。是典型的简单工厂模式（静态工厂模式）；")]),t._v(" "),a("p",[a("strong",[t._v("工厂方法模式")]),t._v("：")]),t._v(" "),a("p",[t._v("FactoryBean是典型的工厂方法模式。在配置文件中通过factory-method属性来指定工厂方法，该方法是一个实例方法。")]),t._v(" "),a("p",[a("strong",[t._v("单例模式：")])]),t._v(" "),a("p",[t._v("Spring用的是双重判断加锁的单例模式。")]),t._v(" "),a("p",[a("strong",[t._v("代理模式")]),t._v("：")]),t._v(" "),a("p",[t._v("Spring的AOP就是使用了动态代理实现的。")]),t._v(" "),a("p",[a("strong",[t._v("装饰器模式")]),t._v("：")]),t._v(" "),a("p",[t._v("JavaSE中的IO流是非常典型的装饰器模式。")]),t._v(" "),a("p",[t._v("Spring 中配置 DataSource 的时候，这些dataSource可能是各种不同类型的，比如不同的数据库：Oracle、SQL Server、MySQL等，也可能是不同的数据源：比如apache 提供的org.apache.commons.dbcp.BasicDataSource、spring提供的org.springframework.jndi.JndiObjectFactoryBean等。")]),t._v(" "),a("p",[t._v("这时，能否在尽可能少修改原有类代码下的情况下，做到动态切换不同的数据源？此时就可以用到装饰者模式。")]),t._v(" "),a("p",[t._v("Spring根据每次请求的不同，将dataSource属性设置成不同的数据源，以到达切换数据源的目的。")]),t._v(" "),a("blockquote",[a("p",[t._v("Spring中类名中带有：Decorator和Wrapper单词的类，都是装饰器模式。")])]),t._v(" "),a("p",[a("strong",[t._v("观察者模式")]),t._v("：")]),t._v(" "),a("p",[t._v("定义对象间的一对多的关系，当一个对象的状态发生改变时，所有依赖于它的对象都得到通知并自动更新。Spring中观察者模式一般用在listener的实现。")]),t._v(" "),a("p",[t._v("Spring中的事件编程模型就是观察者模式的实现。在Spring中定义了一个ApplicationListener接口，用来监听Application的事件，Application其实就是ApplicationContext，ApplicationContext内置了几个事件，其中比较容易理解的是：ContextRefreshedEvent、ContextStartedEvent、ContextStoppedEvent、ContextClosedEvent")]),t._v(" "),a("p",[a("strong",[t._v("策略模式")]),t._v(":")]),t._v(" "),a("p",[t._v("策略模式是行为性模式，调用不同的方法，适应行为的变化 ，强调父类的调用子类的特性 。")]),t._v(" "),a("p",[t._v("getHandler是HandlerMapping接口中的唯一方法，用于根据请求找到匹配的处理器。")]),t._v(" "),a("p",[t._v("比如我们自己写了AccountDao接口，然后这个接口下有不同的实现类：AccountDaoForMySQL，AccountDaoForOracle。对于service来说不需要关心底层具体的实现，只需要面向AccountDao接口调用，底层可以灵活切换实现，这就是策略模式。")]),t._v(" "),a("p",[a("strong",[t._v("模板方法模式")]),t._v(":")]),t._v(" "),a("p",[t._v("Spring中的JdbcTemplate类就是一个模板类。它就是一个模板方法设计模式的体现。在模板类的模板方法execute中编写核心算法，具体的实现步骤在子类中完成。")])])}),[],!1,null,null,null);s.default=e.exports}}]);